{"version":3,"sources":["images/trash.jpg","carts/components/Carts/Cart/Cart.js","carts/components/Carts/Carts.js","carts/pages/Cart/Cart.js","store/Actions/cart.js"],"names":["module","exports","__webpack_require__","p","cart","props","react_default","a","createElement","key","id","src","imageUrl","alt","title","className","price","onClick","onCartDecrement","quantity","onCartIncrement","removeCart","Trash","totalPrice","carts","cartList","cartExist","pageLoaded","map","Cart_Cart","_id","mobileId","toFixed","onIncrementCart","bind","onDecrementCart","onRemoveCart","cartError","Fragment","style","overflowX","border","clearCart","subTotalPrice","Button","clicked","onOrder","disabled","onDisabled","_useState","useState","_useState2","Object","slicedToArray","isLoading","setisLoading","_useState3","_useState4","cartErr","setCartErr","_useState5","_useState6","setPageLoaded","cartsData","useSelector","state","totalPricee","dispatch","useDispatch","onFetchCarts","useCallback","ActionCreators","then","catch","err","useEffect","window","addEventListener","Spinner","textAlign","paddingTop","paddingBottom","color","Carts_Carts","OrderActionCreators","history","push","console","log","length","ErrorModal","open","onClose","errorMessage","response","data","errors","message","firstButton","firstButtonMethod","firstButtonTitle","secondButton","fetchCarts","_ref","E_omar_programming_portofolioooo_mobile_shop_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_omar_programming_portofolioooo_mobile_shop_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","getState","requestBody","_price","wrap","_context","prev","next","query","variables","userId","auth","forEach","car","axios","post","JSON","stringify","headers","Content-Type","Authorization","token","sent","type","ActionTypes","t0","stop","_x","_x2","apply","this","arguments","increaseQuantityByOne","_ref2","_callee2","_context2","_x3","incrementError","cartid","decrementError","item","incrementCartItem","_ref3","_callee3","targetedItem","_context3","find","cartId","cartQuantity","_x4","_x5","decrementCartItem","_ref4","_callee4","_context4","_x6","_x7","addToCart","mobile","_ref5","_callee5","_context5","description","model","_x8","_x9","removeCartItem","_ref6","_callee6","_context6","_x10","_x11","_ref7","_callee7","_context7","_x12","_x13"],"mappings":"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","file":"static/js/12.4c740943.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash.1a439f85.jpg\";","import React from 'react';\r\nimport './Cart.css';\r\nimport Trash from '../../../../images/trash.jpg';\r\n\r\nconst cart = props => {\r\n    return (\r\n        <tr key={props.id}>\r\n            <td>\r\n                <div>\r\n                    <img src={props.imageUrl} alt=\"my phoneimage\" />\r\n                </div>\r\n            </td>\r\n            <td>{props.title}</td>\r\n            <td className=\"table-cart-price\">${props.price}</td>\r\n            <td><span onClick={props.onCartDecrement}>-</span> {props.quantity} <span onClick={props.onCartIncrement}>+</span></td>\r\n            <td>\r\n                <div className=\"trash-image\" onClick={props.removeCart}>\r\n                    <img src={Trash} alt=\"trashImage\" />\r\n                </div>\r\n            </td>\r\n            <td>${props.totalPrice}</td>\r\n        </tr>\r\n    )\r\n};\r\n\r\nexport default cart;","import React from \"react\";\r\nimport Cart from \"./Cart/Cart\";\r\nimport \"./Carts.css\";\r\nimport Button from \"../../../shared/UI/Button/Button\";\r\n\r\nconst carts = props => {\r\n  let cartList;\r\n  if (props.cartExist && props.pageLoaded) {\r\n    cartList = props.carts.map(cart => {\r\n      return (\r\n        <Cart\r\n          key={cart._id}\r\n          id={cart._id}\r\n          price={cart.mobileId.price}\r\n          imageUrl={cart.mobileId.imageUrl}\r\n          quantity={cart.quantity}\r\n          title={cart.mobileId.title}\r\n          totalPrice={(cart.quantity * cart.mobileId.price).toFixed(2)}\r\n          onCartIncrement={props.onIncrementCart.bind(this, cart._id)}\r\n          onCartDecrement={props.onDecrementCart.bind(this, cart._id)}\r\n          removeCart={props.onRemoveCart.bind(this, cart._id)}\r\n        />\r\n      );\r\n    });\r\n  } else if (!props.cartExist && props.pageLoaded) {\r\n    return <h1>No Carts Here!!!</h1>;\r\n  } else if (props.cartError) {\r\n    return <h1>Error in fetching carts</h1>;\r\n  }\r\n  return (\r\n    <>\r\n      {props.pageLoaded ? (\r\n        <>\r\n          <div style={{ overflowX: \"auto\" }}>\r\n            <table className=\"cart-parent\" border=\"1\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Products</th>\r\n                  <th>Name Of Product</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Remove</th>\r\n                  <th>Total Price</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{cartList}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"clear_and_order\">\r\n            <button className=\"clear_cart\" onClick={props.clearCart}>\r\n              Clear Cart\r\n            </button>\r\n            <div className=\"order_total\">\r\n              <p>\r\n                Subtotal: <span>${props.subTotalPrice.toFixed(2)}</span>\r\n              </p>\r\n              <p>\r\n                Tax: <span>${(props.subTotalPrice * 0.1).toFixed(2)}</span>\r\n              </p>\r\n              <p>\r\n                Total:{\" \"}\r\n                <span>\r\n                  $\r\n                  {(props.subTotalPrice + props.subTotalPrice * 0.1).toFixed(2)}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"order_stripe\">\r\n              <Button clicked={props.onOrder} disabled={props.onDisabled}>\r\n                Order Now!\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default carts;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Carts from \"../../components/Carts/Carts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Spinner from \"../../../shared/UI/Spinner/Spinner\";\r\nimport * as OrderActionCreators from '../../../store/Actions/orders';\r\nimport * as ActionCreators from \"../../../store/Actions/cart\";\r\nimport ErrorModal from \"../../../shared/UI/ErrorModal/ErrorModal\";\r\n\r\nconst cart = props => {\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [cartErr, setCartErr] = useState(false);\r\n  const [pageLoaded, setPageLoaded] = useState(false);\r\n\r\n  const cartsData = useSelector(state => state.carts.carts);\r\n  const totalPricee = useSelector(state => state.carts.totalPrice);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFetchCarts = useCallback(() => {\r\n    setisLoading(true);\r\n    dispatch(ActionCreators.fetchCarts())\r\n      .then(() => {\r\n        setisLoading(false);\r\n        setCartErr(false);\r\n      })\r\n      .catch(err => {\r\n        setisLoading(false);\r\n        setCartErr(err);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    onFetchCarts();\r\n    window.addEventListener(\"load\", setPageLoaded(true));\r\n  }, [dispatch, onFetchCarts]);\r\n\r\n  const onCartIncrement = id => {\r\n    dispatch(ActionCreators.incrementCartItem(id))\r\n    .then(() => {})\r\n    .catch(err => {\r\n      setCartErr(err);\r\n    })\r\n  };\r\n\r\n  const onCartDecrement = id => {\r\n    dispatch(ActionCreators.decrementCartItem(id))\r\n    .then(() => {})\r\n    .catch(err => setCartErr(err));\r\n  };\r\n\r\n  const onClearCart = () => {\r\n    dispatch(ActionCreators.clearCart());\r\n  };\r\n\r\n  const removeCart = id => {\r\n    dispatch(ActionCreators.removeCartItem(id));\r\n  };\r\n\r\n  const onOrder = () => {\r\n    setisLoading(true);\r\n    dispatch(OrderActionCreators.addOrder())\r\n    .then(() => {\r\n      setisLoading(false);\r\n      props.history.push('/orders')\r\n    })\r\n    .catch(err => console.log(err))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {isLoading ? (\r\n          <div className=\"spinner-parent\">\r\n            <Spinner />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h1\r\n              style={{\r\n                textAlign: \"center\",\r\n                paddingTop: \"30px\",\r\n                paddingBottom: \"30px\"\r\n              }}\r\n            >\r\n              {pageLoaded ? (\r\n                <div>\r\n                  Your <span style={{ color: \"#07393C\" }}>Cart</span>\r\n                </div>\r\n              ) : null}\r\n            </h1>\r\n            <Carts\r\n              carts={cartsData}\r\n              onIncrementCart={onCartIncrement}\r\n              onDecrementCart={onCartDecrement}\r\n              subTotalPrice={totalPricee}\r\n              clearCart={onClearCart}\r\n              onRemoveCart={removeCart}\r\n              onOrder={onOrder}\r\n              cartExist={cartsData.length > 0 && pageLoaded}\r\n              cartError={cartErr}\r\n              pageLoaded={pageLoaded}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n      <ErrorModal\r\n        open={!!cartErr}\r\n        onClose={() => setCartErr(\"\")}\r\n        errorMessage={\r\n          cartErr.response &&\r\n          cartErr.response.data &&\r\n          cartErr.response.data.errors[0]\r\n            ? cartErr.response.data.errors[0].message\r\n            : \"Unknown Error, We'll fix it soon\"\r\n        }\r\n        firstButton={true}\r\n        firstButtonMethod={() => setCartErr(\"\")}\r\n        firstButtonTitle=\"Try Again\"\r\n        secondButton={false}\r\n        // secondButtonMethod={ongotomobiles}\r\n        // secondButtonTitle=\"return to shopping!\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default cart;\r\n","import * as ActionTypes from \"./ActionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchCarts = () => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                      query Cart($userId: String) {\r\n                          cart(userId: $userId) {\r\n                              _id\r\n                              mobileId {\r\n                                  _id\r\n                                  title\r\n                                  imageUrl\r\n                                  price\r\n                              }\r\n                              userId {\r\n                                  _id\r\n                                  email\r\n                                  firstname\r\n                                  lastname\r\n                              }\r\n                              quantity\r\n                        }\r\n                      }\r\n                  `,\r\n      variables: {\r\n        userId: getState().auth.userId\r\n      }\r\n    };\r\n    let price = 0;\r\n    getState().carts.carts.forEach(car => {\r\n      price += +car.mobileId.price * car.quantity;\r\n    });\r\n    if (\r\n      getState().carts.carts.length <= 0 ||\r\n      getState().carts.totalPrice !== price\r\n    ) {\r\n      try {\r\n        const response = await axios.post(\r\n          \"/graphql\",\r\n          JSON.stringify(requestBody),\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + getState().auth.token\r\n            }\r\n          }\r\n        );\r\n        let price = 0;\r\n        response.data.data.cart.forEach(car => {\r\n          price += +car.mobileId.price * car.quantity;\r\n        });\r\n        dispatch({\r\n          type: ActionTypes.FETCH_CARTS,\r\n          carts: response.data.data.cart,\r\n          totalPrice: price\r\n        });\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst increaseQuantityByOne = id => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.INCREASE_CART_QUANTITY_BY_ONE,\r\n      id: id\r\n    });\r\n  };\r\n};\r\n\r\nconst incrementError = (id) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.INCREMENT_CART_ERROR,\r\n      cartid: id\r\n    });\r\n  };\r\n};\r\n\r\nconst decrementError = (id, item) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.DECREMENT_CART_ERROR,\r\n      cartid: id,\r\n      item: item\r\n    });\r\n  };\r\n};\r\n\r\nexport const incrementCartItem = id => {\r\n  return async (dispatch, getState) => {\r\n    const targetedItem = getState().carts.carts.find(cart => cart._id === id);\r\n    const requestBody = {\r\n      query: `\r\n                mutation IncrementItemToCart($cartId: String!, $cartQuantity: Int!) {\r\n                    incrementItemToCart(cartId: $cartId, cartQuantity: $cartQuantity) {\r\n                        quantity\r\n                        userId {\r\n                          email\r\n                        }\r\n                        mobileId {\r\n                          title\r\n                          description\r\n                          price\r\n                        }\r\n                      }\r\n                }\r\n            `,\r\n      variables: {\r\n        cartId: id,\r\n        cartQuantity: targetedItem.quantity\r\n      }\r\n    };\r\n    dispatch(increaseQuantityByOne(id));\r\n    try {\r\n      await axios.post(\r\n        \"/graphql\",\r\n        JSON.stringify(requestBody),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          }\r\n        }\r\n      );\r\n    } catch(err) {\r\n      dispatch(incrementError(id));\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const decrementCartItem = id => {\r\n  return async (dispatch, getState) => {\r\n    const targetedItem = getState().carts.carts.find(cart => cart._id === id);\r\n    const requestBody = {\r\n      query: `\r\n      mutation DecrementItemToCart($cartId: String!, $cartQuantity: Int!) {\r\n        decrementItemToCart(cartId: $cartId, cartQuantity: $cartQuantity) {\r\n            quantity\r\n            userId {\r\n              email\r\n            }\r\n            mobileId {\r\n              title\r\n              description\r\n              price\r\n            }\r\n          }\r\n    }\r\n            `,\r\n      variables: {\r\n        cartId: id,\r\n        cartQuantity: targetedItem.quantity\r\n      }\r\n    };\r\n\r\n    dispatch({\r\n      type: ActionTypes.DECREASE_CART_QUANTITY_BY_ONE,\r\n      id: id\r\n    });\r\n\r\n    try {\r\n      await axios.post(\r\n        \"/graphql\",\r\n        JSON.stringify(requestBody),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          }\r\n        }\r\n      );\r\n    } catch(err) {\r\n      dispatch(decrementError(id, targetedItem));\r\n      throw err;\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const addToCart = mobile => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                mutation AddToCart($mobile: AddedMobileToCartInput!) {\r\n                    addToCart(mobile: $mobile) {\r\n                      _id\r\n                        mobileId {\r\n                        _id\r\n                        title\r\n                        price\r\n                        createdAt\r\n                        updatedAt\r\n                        imageUrl\r\n                        }\r\n                        quantity\r\n                        userId {\r\n                        _id\r\n                        email\r\n                        firstname\r\n                        lastname\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n      variables: {\r\n        mobile: {\r\n          _id: mobile._id,\r\n          title: mobile.title,\r\n          description: mobile.description,\r\n          model: mobile.model,\r\n          price: mobile.price,\r\n          imageUrl: mobile.imageUrl\r\n        }\r\n      }\r\n    };\r\n\r\n    const response = await axios.post(\r\n      \"/graphql\",\r\n      requestBody,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + getState().auth.token\r\n        }\r\n      }\r\n    );\r\n    dispatch({\r\n      type: ActionTypes.ADD_TO_CART,\r\n      cart: response.data.data.addToCart\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeCartItem = id => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                mutation RemoveCart($cartId: String!) {\r\n                    removeCart(cartId: $cartId) {\r\n                        _id\r\n                        mobileId {\r\n                            _id\r\n                            title\r\n                            imageUrl\r\n                            price\r\n                        }\r\n                        userId {\r\n                            _id\r\n                            email\r\n                            firstname\r\n                            lastname\r\n                        }\r\n                        quantity\r\n                      }\r\n                }\r\n            `,\r\n      variables: {\r\n        cartId: id\r\n      }\r\n    };\r\n    dispatch({\r\n      type: ActionTypes.REMOVE_ITEM_FROM_CART,\r\n      cartId: id\r\n    })\r\n    await axios\r\n      .post(\"/graphql\", requestBody, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + getState().auth.token\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const clearCart = () => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                mutation {\r\n                    clearCart {\r\n                    email\r\n                    }\r\n                }  \r\n            `\r\n    };\r\n    dispatch({\r\n      type: ActionTypes.CLEAR_CART\r\n    })\r\n    await axios\r\n      .post(\"/graphql\", requestBody, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + getState().auth.token\r\n        }\r\n      })\r\n  }\r\n}"],"sourceRoot":""}