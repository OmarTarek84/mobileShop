{"version":3,"sources":["orders/components/Orders/Order/Order.js","orders/components/Orders/Orders.js","orders/pages/Orders/Orders.js"],"names":["order","props","react_default","a","createElement","className","key","id","orderMobiles","map","mobile","_id","title","quantity","date","orders","Order_Order","createdAt","ordersContainer","allOrders","_useState","useState","_useState2","Object","slicedToArray","isLoading","setisLoading","_useState3","_useState4","orderError","setOrderError","orderData","useSelector","state","dispatch","useDispatch","onFetchOrders","useCallback","ActionCreators","then","catch","err","useEffect","Spinner","length","Orders_Orders","Fragment","ErrorModal","open","onClose","errorMessage","response","data","errors","message","firstButton","firstButtonMethod","firstButtonTitle","secondButton"],"mappings":"iLAmBeA,iBAhBD,SAAAC,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,IAAKL,EAAMM,IAC9BL,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,YAAOH,EAAMM,KACxBN,EAAMO,aAAaC,IAAI,SAAAT,GACpB,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,IAAKN,EAAMU,OAAOC,KAC5CT,EAAAC,EAAAC,cAAA,SAAIJ,EAAMU,OAAOE,MAAjB,KAAyBV,EAAAC,EAAAC,cAAA,YAAOJ,EAAMa,UAAtC,QAIZX,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,YAAOH,EAAMa,UCA9BC,EAXA,SAAAd,GACX,OAAOA,EAAMc,OAAON,IAAI,SAAAT,GACpB,OACIE,EAAAC,EAAAC,cAACY,EAAD,CAAOT,GAAIP,EAAMW,IACVL,IAAKN,EAAMW,IACXH,aAAcR,EAAMA,MACpBc,KAAMd,EAAMiB,uCC+DhBC,UA/DS,SAAAjB,GAAS,IAwB3BkB,EAxB2BC,EACGC,oBAAS,GADZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBK,EADwBH,EAAA,GACbI,EADaJ,EAAA,GAAAK,EAEKN,oBAAS,GAFdO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAExBE,EAFwBD,EAAA,GAEZE,EAFYF,EAAA,GAIzBG,EAAYC,YAAY,SAAAC,GAAK,OAAIA,EAAMlB,OAAOA,SAC9CmB,EAAWC,cAEXC,EAAgBC,sBAAY,WAChCX,GAAa,GACbQ,EAASI,OACRC,KAAK,WACJT,GAAc,GACdJ,GAAa,KAEdc,MAAM,SAAAC,GACLX,EAAcW,GACdf,GAAa,OAkBjB,OAdAgB,oBAAU,WACRN,KACC,CAACA,IAIFjB,EADEM,EACUvB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,MAERZ,EAAUa,QAAU,EACV1C,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAACyC,EAAD,CAAQ9B,OAAQgB,IAI9B7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACA5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,kBACOF,EAAAC,EAAAC,cAAA,uBAENe,GAEHjB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACIC,OAAQnB,EACRoB,QAAS,kBAAMnB,EAAc,KAC7BoB,aACErB,EAAWsB,UACXtB,EAAWsB,SAASC,MACpBvB,EAAWsB,SAASC,KAAKC,OAAO,GAC5BxB,EAAWsB,SAASC,KAAKC,OAAO,GAAGC,QACnC,mCAENC,aAAa,EACbC,kBAAmBpB,EACnBqB,iBAAiB,8BACjBC,cAAc","file":"static/js/13.76d908b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Order.css';\r\n\r\nconst order = props => {\r\n    return (\r\n        <div className=\"order\" key={props.id}>\r\n            <h3>Order: #<span>{props.id}</span></h3>\r\n            {props.orderMobiles.map(order => {\r\n                return (\r\n                    <div className=\"order-detail\" key={order.mobile._id}>\r\n                        <p>{order.mobile.title} (<span>{order.quantity}</span>)</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div>Date of Order: <span>{props.date}</span></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React from 'react';\r\nimport Order from './Order/Order';\r\n\r\nconst orders = props => {\r\n    return props.orders.map(order => {\r\n        return (\r\n            <Order id={order._id} \r\n                   key={order._id}\r\n                   orderMobiles={order.order}\r\n                   date={order.createdAt} />\r\n        )\r\n    });\r\n};\r\n\r\nexport default orders;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport {useDispatch} from 'react-redux';\r\nimport \"./Orders.css\";\r\nimport Orders from \"../../components/Orders/Orders\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from \"../../../shared/UI/Spinner/Spinner\";\r\nimport * as ActionCreators from '../../../store/Actions/orders';\r\nimport ErrorModal from '../../../shared/UI/ErrorModal/ErrorModal';\r\n\r\nconst ordersContainer = props => {\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [orderError, setOrderError] = useState(false);\r\n\r\n  const orderData = useSelector(state => state.orders.orders);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFetchOrders = useCallback(() => {\r\n    setisLoading(true);\r\n    dispatch(ActionCreators.fetchOrders())\r\n    .then(() => {\r\n      setOrderError(false);\r\n      setisLoading(false);\r\n    })\r\n    .catch(err => {\r\n      setOrderError(err);\r\n      setisLoading(false);\r\n    })\r\n  });\r\n\r\n  useEffect(() => {\r\n    onFetchOrders();\r\n  }, [onFetchOrders]);\r\n\r\n  let allOrders;\r\n  if (isLoading) {\r\n    allOrders = <Spinner />;\r\n  } else {\r\n    if (orderData.length <= 0) {\r\n      allOrders = <h1>No Orders Yet!!</h1>;\r\n    } else {\r\n      allOrders = <Orders orders={orderData} />;\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"orders\">\r\n      <h1>\r\n        Your <span>Orders</span>\r\n      </h1>\r\n      {allOrders}\r\n    </div>\r\n    <ErrorModal\r\n        open={!!orderError}\r\n        onClose={() => setOrderError(\"\")}\r\n        errorMessage={\r\n          orderError.response &&\r\n          orderError.response.data &&\r\n          orderError.response.data.errors[0]\r\n            ? orderError.response.data.errors[0].message\r\n            : \"Unknown Error, We'll fix it soon\"\r\n        }\r\n        firstButton={true}\r\n        firstButtonMethod={onFetchOrders}\r\n        firstButtonTitle=\"Try Fetching Orders Again!!\"\r\n        secondButton={false}\r\n        // secondButtonMethod={ongotocreate}\r\n        // secondButtonTitle=\"Create a new Mobile Product!\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ordersContainer;\r\n"],"sourceRoot":""}