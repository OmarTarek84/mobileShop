{"version":3,"sources":["mobiles/components/Mobiles/Mobile/Mobile.js","mobiles/components/Mobiles/Mobiles.js","mobiles/pages/Mobiles/Mobiles.js","shared/UI/Button/Button.js","shared/UI/ErrorModal/ErrorModal.js","store/Actions/mobiles.js","store/Actions/cart.js"],"names":["mobile","props","react_default","a","createElement","className","key","id","isAuthorized","userId","mobileUserID","Button","clicked","addToCart","disabled","onDisabled","src","image","alt","title","price","style","fontWeight","firstname","lastname","Fragment","editClicked","detailClicked","allMobiles","mobileList","loading","Spinner","mobilesExist","mobiles","map","Mobile_Mobile","_id","clickedEdit","bind","goToDetail","imageUrl","addCart","buttonDisabled","error","_useState","useState","_useState2","Object","slicedToArray","cartAdded","setcartAdded","_useState3","_useState4","cartAddedItem","setcartAddedItem","_useState5","_useState6","setbuttonDisabled","_useState7","_useState8","mobError","setmobError","_useState9","_useState10","setLoading","dispatch","useDispatch","mobilesData","useSelector","state","auth","token","socket","openSocket","onFetchMobiles","useCallback","ActionCreators","then","catch","err","useEffect","on","data","close","description","model","closeBackdrop","components_Mobiles_Mobiles","length","history","push","pathname","search","CartActionCreator","Backdrop","show","marginTop","ErrorModal","open","onClose","errorMessage","response","errors","message","firstButton","firstButtonMethod","firstButtonTitle","secondButton","secondButtonMethod","secondButtonTitle","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","button","onClick","type","children","_Button_Button__WEBPACK_IMPORTED_MODULE_1__","react_responsive_modal__WEBPACK_IMPORTED_MODULE_2__","errorModal","center","textAlign","display","justifyContent","fetchMobiles","_ref","E_omar_programming_portofolioooo_mobile_shop_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_omar_programming_portofolioooo_mobile_shop_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","getState","requestBody","resData","wrap","_context","prev","next","query","axios","post","JSON","stringify","headers","Content-Type","sent","ActionTypes","t0","abrupt","stop","_x","_x2","apply","this","arguments","createMobile","file","_ref2","_callee2","formData","response1","res1Json","response2","_context2","FormData","append","fetch","method","Authorization","body","json","filePath","variables","_x3","_x4","editMobileSocket","createMobileSocket","editMobile","_ref3","_callee3","_context3","mobileId","newMobile","_x5","_x6","fetchCarts","_price","carts","forEach","car","quantity","totalPrice","cart","increaseQuantityByOne","incrementError","cartid","decrementError","item","incrementCartItem","targetedItem","find","cartId","cartQuantity","decrementCartItem","_ref4","_callee4","_context4","_x7","_ref5","_callee5","_context5","_x8","_x9","removeCartItem","_ref6","_callee6","_context6","_x10","_x11","clearCart","_ref7","_callee7","_context7","_x12","_x13"],"mappings":"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","file":"static/js/8.a9b9c837.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '../../../../shared/UI/Button/Button';\r\nimport './Mobile.css';\r\n\r\nconst mobile = props => {\r\n    return (\r\n        <div className=\"mobile-card\" key={props.id}>\r\n            {props.isAuthorized && props.userId !== props.mobileUserID\r\n             ?\r\n             <div className=\"AddToCart\">\r\n                <Button clicked={props.addToCart} disabled={props.onDisabled}>Add To Cart</Button>\r\n             </div>\r\n             :\r\n             null\r\n             }\r\n            <div className=\"mobile-image\">\r\n                <img src={props.image} alt=\"mobileImage\" />\r\n            </div>\r\n            <div className=\"mobile-type-price\">\r\n                <div className=\"mobile-type\">\r\n                    <p>{props.title}</p>\r\n                </div>\r\n                <div className=\"mobile-price\">\r\n                    <p>${props.price}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"createdby\">\r\n                <p>Created By: <span style={{fontWeight: 'bolder'}}>{props.firstname} {props.lastname}</span></p>\r\n            </div>\r\n            {props.isAuthorized \r\n             ?\r\n             <div className=\"buttons\">\r\n             {props.userId === props.mobileUserID\r\n             ?\r\n             <>\r\n             <Button clicked={props.editClicked}>Edit</Button>\r\n             <Button clicked={props.detailClicked}>Details</Button>\r\n             </>\r\n             :\r\n             <Button clicked={props.detailClicked}>Details</Button>}\r\n            </div>\r\n            :\r\n             null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default mobile;","import React from \"react\";\r\nimport \"./Mobiles.css\";\r\nimport Mobile from \"./Mobile/Mobile\";\r\nimport Spinner from \"../../../shared/UI/Spinner/Spinner\";\r\n\r\nconst allMobiles = props => {\r\n  let mobileList;\r\n  if (props.loading) {\r\n      mobileList = <Spinner />\r\n  } else if (props.mobilesExist) {\r\n    mobileList = props.mobiles.map(mobile => {\r\n      return (\r\n        <Mobile\r\n          key={mobile._id}\r\n          id={mobile._id}\r\n          title={mobile.title}\r\n          price={mobile.price}\r\n          firstname={mobile.userId.firstname}\r\n          lastname={mobile.userId.lastname}\r\n          editClicked={props.clickedEdit.bind(this, mobile._id)}\r\n          mobileUserID={mobile.userId._id}\r\n          detailClicked={props.goToDetail.bind(this, mobile._id)}\r\n          image={mobile.imageUrl}\r\n          addToCart={props.addCart.bind(this, mobile)}\r\n          onDisabled={props.buttonDisabled}\r\n          userId={props.userId}\r\n          isAuthorized={props.isAuthorized}\r\n        />\r\n      );\r\n    });\r\n  } else if (props.error) {\r\n    return <h2>An Error Occurred</h2>;\r\n  }\r\n  return <>{mobileList}</>;\r\n};\r\n\r\nexport default allMobiles;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./Mobiles.css\";\r\nimport AllMobiles from \"../../components/Mobiles/Mobiles\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as ActionCreators from \"../../../store/Actions/mobiles\";\r\nimport Backdrop from \"../../../shared/UI/Backdrop/Backdrop\";\r\nimport Button from \"../../../shared/UI/Button/Button\";\r\nimport openSocket from \"socket.io-client\";\r\nimport ErrorModal from \"../../../shared/UI/ErrorModal/ErrorModal\";\r\nimport * as CartActionCreator from \"../../../store/Actions/cart\";\r\n\r\nconst mobiles = props => {\r\n  const [cartAdded, setcartAdded] = useState(false);\r\n  const [cartAddedItem, setcartAddedItem] = useState(null);\r\n  const [buttonDisabled, setbuttonDisabled] = useState(false);\r\n  const [mobError, setmobError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mobilesData = useSelector(state => state.mobiles.mobiles);\r\n  const userId = useSelector(state => state.auth.userId);\r\n  const isAuthorized = useSelector(state => state.auth.token !== null);\r\n\r\n  const socket = openSocket(\"/\");\r\n\r\n  const onFetchMobiles = useCallback(() => {\r\n    setmobError(\"\");\r\n    setLoading(true);\r\n    dispatch(ActionCreators.fetchMobiles())\r\n      .then(() => {\r\n        setmobError(\"\");\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setmobError(err);\r\n        setLoading(false);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    onFetchMobiles();\r\n  }, [dispatch, onFetchMobiles]);\r\n\r\n\r\n  useEffect(() => {\r\n    socket.on(\"newMobile\", data => {\r\n      dispatch(ActionCreators.createMobileSocket(data.mobile));\r\n    });\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"editedMobile\", data => {\r\n      dispatch(\r\n        ActionCreators.editMobileSocket(\r\n          data.mobile._id,\r\n          data.mobile.title,\r\n          data.mobile.description,\r\n          data.mobile.price,\r\n          data.mobile.model,\r\n          data.mobile.imageUrl\r\n        )\r\n      );\r\n    });\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  const onGoToEdit = id => {\r\n    props.history.push({\r\n      pathname: \"/edit/\" + id,\r\n      search: \"?edit=true\"\r\n    });\r\n  };\r\n\r\n  const onGoToDetail = id => {\r\n    props.history.push({\r\n      pathname: \"/mobile/\" + id\r\n    });\r\n  };\r\n\r\n  const onGoToCart = () => {\r\n    props.history.push({\r\n      pathname: \"/cart\"\r\n    });\r\n  };\r\n\r\n  const closeBackdrop = () => {\r\n    setcartAdded(false);\r\n  };\r\n\r\n  const ongotocreate = () => {\r\n    props.history.push(\"/new\");\r\n  };\r\n\r\n  const addToCart = mobile => {\r\n    setbuttonDisabled(true);\r\n    dispatch(CartActionCreator.addToCart(mobile))\r\n      .then(() => {\r\n        setbuttonDisabled(false);\r\n        setcartAddedItem(mobile);\r\n        setcartAdded(true);\r\n      })\r\n      .catch(err => {\r\n        setbuttonDisabled(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"mobiles-title\">\r\n        Our <span>Mobiles</span>\r\n      </h1>\r\n      <div className=\"mobiles\">\r\n        <AllMobiles\r\n          mobiles={mobilesData}\r\n          mobilesExist={mobilesData.length > 0}\r\n          clickedEdit={onGoToEdit}\r\n          goToDetail={onGoToDetail}\r\n          addCart={addToCart}\r\n          buttonDisabled={buttonDisabled}\r\n          error={mobError}\r\n          loading={!!loading}\r\n          userId={userId}\r\n          isAuthorized={isAuthorized}\r\n        />\r\n      </div>\r\n      {cartAdded ? (\r\n        <Backdrop show close={closeBackdrop}>\r\n          <div className=\"item-added-parent\">\r\n            <h3>Item added To Cart</h3>\r\n            <div className=\"item-added-image\">\r\n              <img src={cartAddedItem.imageUrl} alt=\"cart-mobile\" />\r\n            </div>\r\n            <p>{cartAddedItem.title}</p>\r\n            <p>\r\n              Price: <span>${cartAddedItem.price}</span>\r\n            </p>\r\n            <div style={{ marginTop: \"7px\" }}>\r\n              <Button clicked={closeBackdrop}>Continue Shopping</Button>\r\n            </div>\r\n            <div style={{ marginTop: \"5px\" }}>\r\n              <Button clicked={onGoToCart}>Go To Cart</Button>\r\n            </div>\r\n          </div>\r\n        </Backdrop>\r\n      ) : null}\r\n      <ErrorModal\r\n        open={!!mobError}\r\n        onClose={() => setmobError(\"\")}\r\n        errorMessage={\r\n          mobError.response &&\r\n          mobError.response.data &&\r\n          mobError.response.data.errors[0]\r\n            ? mobError.response.data.errors[0].message\r\n            : \"Unknown Error, We'll fix it soon\"\r\n        }\r\n        firstButton={true}\r\n        firstButtonMethod={onFetchMobiles}\r\n        firstButtonTitle=\"Try Again Now\"\r\n        secondButton={true}\r\n        secondButtonMethod={ongotocreate}\r\n        secondButtonTitle=\"Create a new Mobile Product!\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default mobiles;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = props => {\r\n    return (\r\n        <button onClick={props.clicked} \r\n                type={props.type} \r\n                disabled={props.disabled} \r\n                className=\"buttonn\">\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default button;","import React from \"react\";\r\nimport Button from '../Button/Button'\r\nimport Modal from \"react-responsive-modal\";\r\n\r\n\r\nconst errorModal = props => {\r\n  return (\r\n    <Modal open={props.open} onClose={props.onClose} center>\r\n      <h2 style={{ textAlign: \"center\", marginTop: '11%' }}>An Error Occurred</h2>\r\n      <p style={{ marginTop: \"12px\" }}>\r\n        {props.errorMessage}\r\n      </p>\r\n      <div\r\n        style={{\r\n          marginTop: \"25px\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\"\r\n        }}\r\n      >\r\n        {props.firstButton ? (\r\n          <Button type=\"button\" clicked={props.firstButtonMethod}>\r\n            {props.firstButtonTitle}\r\n          </Button>\r\n        ) : null}\r\n        {props.secondButton ? (\r\n          <Button type=\"button\" clicked={props.secondButtonMethod}>\r\n            {props.secondButtonTitle}\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default errorModal;","import axios from \"axios\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const fetchMobiles = () => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n            query {\r\n                mobiles {\r\n                  _id\r\n                  title\r\n                  description\r\n                  price\r\n                  model\r\n                  imageUrl\r\n                  createdAt\r\n                  userId {\r\n                    _id\r\n                    firstname\r\n                    lastname\r\n                    email\r\n                  }\r\n                }\r\n              }\r\n            `\r\n    };\r\n    if (getState().mobiles.mobiles.length <= 1) {\r\n      try {\r\n        const resData = await axios.post(\r\n          \"/graphql\",\r\n          JSON.stringify(requestBody),\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          }\r\n        );\r\n        const mobiles = resData.data.data.mobiles;\r\n        dispatch({\r\n          type: ActionTypes.FETCH_MOBILES,\r\n          mobiles: mobiles\r\n        });\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMobile = (title, description, price, model, file) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let image;\r\n      if (typeof(file) === 'string') {\r\n        image = file;\r\n      } else {\r\n        const formData = new FormData();\r\n        formData.append(\"pic\", file);\r\n        const response1 = await fetch(\"/post-image\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          },\r\n          body: formData\r\n        });\r\n        const res1Json = await response1.json();\r\n        image = res1Json.filePath;\r\n      }\r\n      const requestBody = {\r\n        query: `\r\n                      mutation CreateMobile($title: String!, $description: String!, $price: Float!, $model: String!, $imageUrl: String!) {\r\n                          createMobile(mobileInput: {\r\n                              title: $title,\r\n                              description: $description,\r\n                              price: $price,\r\n                              model: $model,\r\n                              imageUrl: $imageUrl\r\n                            }) {\r\n                              _id\r\n                              title\r\n                              description\r\n                              price\r\n                              model\r\n                              userId {\r\n                                _id\r\n                                email\r\n                                firstname\r\n                                lastname\r\n                              }\r\n                              imageUrl\r\n                              createdAt\r\n                              updatedAt\r\n                            }\r\n                      }\r\n                  `,\r\n        variables: {\r\n          title: title,\r\n          description: description,\r\n          price: price,\r\n          model: model,\r\n          imageUrl: image\r\n        }\r\n      };\r\n      const response2 = await axios.post(\r\n        \"/graphql\",\r\n        JSON.stringify(requestBody),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          }\r\n        }\r\n      );\r\n      dispatch({\r\n        type: ActionTypes.CREATE_MOBILE,\r\n        mobile: response2.data.data.createMobile\r\n      });\r\n    } catch (err1) {\r\n      throw err1;\r\n    }\r\n  };\r\n};\r\n\r\nexport const editMobileSocket = (id, title, description, price, model, imageUrl) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.EDIT_MOBILE,\r\n      id: id,\r\n      title: title,\r\n      description: description,\r\n      model: model,\r\n      price: price,\r\n      imageUrl: imageUrl\r\n    });\r\n  };\r\n};\r\n\r\nexport const createMobileSocket = (mobile) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.CREATE_MOBILE,\r\n      mobile: mobile\r\n    });\r\n  };\r\n};\r\n\r\nexport const editMobile = (id, title, description, price, model, imageUrl) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let image;\r\n      const formData = new FormData();\r\n      if (typeof(imageUrl) === 'string') {\r\n        image = imageUrl;\r\n      } else {\r\n        formData.append(\"pic\", imageUrl);\r\n        const response1 = await fetch(\"/post-image\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          },\r\n          body: formData\r\n        });\r\n        const res1Json = await response1.json();\r\n        image = res1Json.filePath;\r\n      }\r\n      const requestBody = {\r\n        query: `\r\n                          mutation EditMobile($mobileId: String!, $newMobile: MobileInput!) {\r\n                              editMobile(mobileId: $mobileId, newMobile: $newMobile) {\r\n                                  _id\r\n                                  title\r\n                                  description\r\n                                  price\r\n                                  model\r\n                                  imageUrl\r\n                                  userId {\r\n                                      _id\r\n                                      firstname\r\n                                      lastname\r\n                                      email\r\n                                  }\r\n                                  createdAt\r\n                                  updatedAt\r\n                                }\r\n                          }\r\n                      `,\r\n        variables: {\r\n          mobileId: id,\r\n          newMobile: {\r\n            title: title,\r\n            description: description,\r\n            price: price,\r\n            model: model,\r\n            imageUrl: image\r\n          }\r\n        }\r\n      };\r\n  \r\n      const response = await axios.post(\r\n        \"/graphql\",\r\n        JSON.stringify(requestBody),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          }\r\n        }\r\n      );\r\n\r\n      const resData = response.data.data.editMobile;\r\n\r\n      dispatch({\r\n        type: ActionTypes.EDIT_MOBILE,\r\n        id: id,\r\n        title: resData.title,\r\n        description: resData.description,\r\n        model: resData.model,\r\n        price: resData.price,\r\n        imageUrl: resData.imageUrl\r\n      });\r\n    } catch(err) {\r\n      throw err;\r\n    }\r\n\r\n  };\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchCarts = () => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                      query Cart($userId: String) {\r\n                          cart(userId: $userId) {\r\n                              _id\r\n                              mobileId {\r\n                                  _id\r\n                                  title\r\n                                  imageUrl\r\n                                  price\r\n                              }\r\n                              userId {\r\n                                  _id\r\n                                  email\r\n                                  firstname\r\n                                  lastname\r\n                              }\r\n                              quantity\r\n                        }\r\n                      }\r\n                  `,\r\n      variables: {\r\n        userId: getState().auth.userId\r\n      }\r\n    };\r\n    let price = 0;\r\n    getState().carts.carts.forEach(car => {\r\n      price += +car.mobileId.price * car.quantity;\r\n    });\r\n    if (\r\n      getState().carts.carts.length <= 0 ||\r\n      getState().carts.totalPrice !== price\r\n    ) {\r\n      try {\r\n        const response = await axios.post(\r\n          \"/graphql\",\r\n          JSON.stringify(requestBody),\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + getState().auth.token\r\n            }\r\n          }\r\n        );\r\n        let price = 0;\r\n        response.data.data.cart.forEach(car => {\r\n          price += +car.mobileId.price * car.quantity;\r\n        });\r\n        dispatch({\r\n          type: ActionTypes.FETCH_CARTS,\r\n          carts: response.data.data.cart,\r\n          totalPrice: price\r\n        });\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst increaseQuantityByOne = id => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.INCREASE_CART_QUANTITY_BY_ONE,\r\n      id: id\r\n    });\r\n  };\r\n};\r\n\r\nconst incrementError = (id) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.INCREMENT_CART_ERROR,\r\n      cartid: id\r\n    });\r\n  };\r\n};\r\n\r\nconst decrementError = (id, item) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: ActionTypes.DECREMENT_CART_ERROR,\r\n      cartid: id,\r\n      item: item\r\n    });\r\n  };\r\n};\r\n\r\nexport const incrementCartItem = id => {\r\n  return async (dispatch, getState) => {\r\n    const targetedItem = getState().carts.carts.find(cart => cart._id === id);\r\n    const requestBody = {\r\n      query: `\r\n                mutation IncrementItemToCart($cartId: String!, $cartQuantity: Int!) {\r\n                    incrementItemToCart(cartId: $cartId, cartQuantity: $cartQuantity) {\r\n                        quantity\r\n                        userId {\r\n                          email\r\n                        }\r\n                        mobileId {\r\n                          title\r\n                          description\r\n                          price\r\n                        }\r\n                      }\r\n                }\r\n            `,\r\n      variables: {\r\n        cartId: id,\r\n        cartQuantity: targetedItem.quantity\r\n      }\r\n    };\r\n    dispatch(increaseQuantityByOne(id));\r\n    try {\r\n      await axios.post(\r\n        \"/graphql\",\r\n        JSON.stringify(requestBody),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          }\r\n        }\r\n      );\r\n    } catch(err) {\r\n      dispatch(incrementError(id));\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const decrementCartItem = id => {\r\n  return async (dispatch, getState) => {\r\n    const targetedItem = getState().carts.carts.find(cart => cart._id === id);\r\n    const requestBody = {\r\n      query: `\r\n      mutation DecrementItemToCart($cartId: String!, $cartQuantity: Int!) {\r\n        decrementItemToCart(cartId: $cartId, cartQuantity: $cartQuantity) {\r\n            quantity\r\n            userId {\r\n              email\r\n            }\r\n            mobileId {\r\n              title\r\n              description\r\n              price\r\n            }\r\n          }\r\n    }\r\n            `,\r\n      variables: {\r\n        cartId: id,\r\n        cartQuantity: targetedItem.quantity\r\n      }\r\n    };\r\n\r\n    dispatch({\r\n      type: ActionTypes.DECREASE_CART_QUANTITY_BY_ONE,\r\n      id: id\r\n    });\r\n\r\n    try {\r\n      await axios.post(\r\n        \"/graphql\",\r\n        JSON.stringify(requestBody),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + getState().auth.token\r\n          }\r\n        }\r\n      );\r\n    } catch(err) {\r\n      dispatch(decrementError(id, targetedItem));\r\n      throw err;\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const addToCart = mobile => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                mutation AddToCart($mobile: AddedMobileToCartInput!) {\r\n                    addToCart(mobile: $mobile) {\r\n                      _id\r\n                        mobileId {\r\n                        _id\r\n                        title\r\n                        price\r\n                        createdAt\r\n                        updatedAt\r\n                        imageUrl\r\n                        }\r\n                        quantity\r\n                        userId {\r\n                        _id\r\n                        email\r\n                        firstname\r\n                        lastname\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n      variables: {\r\n        mobile: {\r\n          _id: mobile._id,\r\n          title: mobile.title,\r\n          description: mobile.description,\r\n          model: mobile.model,\r\n          price: mobile.price,\r\n          imageUrl: mobile.imageUrl\r\n        }\r\n      }\r\n    };\r\n\r\n    const response = await axios.post(\r\n      \"/graphql\",\r\n      requestBody,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + getState().auth.token\r\n        }\r\n      }\r\n    );\r\n    dispatch({\r\n      type: ActionTypes.ADD_TO_CART,\r\n      cart: response.data.data.addToCart\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeCartItem = id => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                mutation RemoveCart($cartId: String!) {\r\n                    removeCart(cartId: $cartId) {\r\n                        _id\r\n                        mobileId {\r\n                            _id\r\n                            title\r\n                            imageUrl\r\n                            price\r\n                        }\r\n                        userId {\r\n                            _id\r\n                            email\r\n                            firstname\r\n                            lastname\r\n                        }\r\n                        quantity\r\n                      }\r\n                }\r\n            `,\r\n      variables: {\r\n        cartId: id\r\n      }\r\n    };\r\n    dispatch({\r\n      type: ActionTypes.REMOVE_ITEM_FROM_CART,\r\n      cartId: id\r\n    })\r\n    await axios\r\n      .post(\"/graphql\", requestBody, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + getState().auth.token\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const clearCart = () => {\r\n  return async (dispatch, getState) => {\r\n    const requestBody = {\r\n      query: `\r\n                mutation {\r\n                    clearCart {\r\n                    email\r\n                    }\r\n                }  \r\n            `\r\n    };\r\n    dispatch({\r\n      type: ActionTypes.CLEAR_CART\r\n    })\r\n    await axios\r\n      .post(\"/graphql\", requestBody, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + getState().auth.token\r\n        }\r\n      })\r\n  }\r\n}"],"sourceRoot":""}