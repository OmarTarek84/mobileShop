{"version":3,"sources":["components/NavigationItem/NavigationItem.js","components/UI/Backdrop/Backdrop.js","containers/NavigationItems/NavigationItems.js","components/Layout/Layout.js","components/UI/Button/Button.js","components/Mobiles/Mobile/Mobile.js","components/UI/Spinner/Spinner.js","components/Mobiles/Mobiles.js","containers/Mobiles/Mobiles.js","components/Input/Input.js","store/Actions/auth.js","store/Actions/ActionTypes.js","containers/Auth/Auth.js","containers/Auth/Signin/Signin.js","containers/Auth/Logout/Logout.js","containers/CreateMobiles/CreateMobiles.js","components/Mobile-detail/Mobile-detail.js","containers/Mobile-Detail/Mobile-Detail.js","components/Carts/Cart/Cart.js","components/Carts/Carts.js","containers/Cart/Cart.js","components/Orders/Order/Order.js","components/Orders/Orders.js","containers/Orders/Orders.js","hoc/ErrorHandler.js","App.js","store/Reducers/auth.js","index.js","images/logo.svg","images/trash.jpg"],"names":["navigationItem","props","react_default","a","createElement","className","react_router_dom","to","link","onClick","close","exact","children","backdrop","show","NavigationItems","state","sideDrawerClose","_this","setState","sideDrawerOpen","navigationLists","style","transform","this","isAuthorized","NavigationItem_NavigationItem","Fragment","src","MobileLogo","alt","firstname","display","marginLeft","color","Backdrop_Backdrop","Component","connect","token","layout","containers_NavigationItems_NavigationItems","button","clicked","type","disabled","userId","withRouter","key","id","mobileUserID","Button_Button","addToCart","onDisabled","image","title","price","fontWeight","lastname","editClicked","detailClicked","spinner","allMobiles","mobileList","Spinner_Spinner","mobilesExist","mobiles","map","mobile","Mobile_Mobile","_id","clickedEdit","bind","goToDetail","imageUrl","addCart","buttonDisabled","Mobiles","isActive","noMobiles","cartAdded","cartAddedItem","onGoToEdit","filteredMobile","find","p","localStorage","setItem","JSON","stringify","history","push","pathname","search","onGoToDetail","onGoToCart","onFetchMobiles","axios","post","query","headers","Content-Type","then","resData","data","length","catch","err","console","log","closeBackdrop","requestBody","variables","description","model","Authorization","res","_this2","socket","openSocket","on","prevState","concat","mobileState","Object","toConsumableArray","findIndex","src_components_Mobiles_Mobiles","mobileId","marginTop","input","inputType","classes","inputparentshow","errorMessages","showinput","touched","invalid","elementConfig","name","elementType","assign","value","onChange","changed","join","options","option","displayValue","label","authSuccess","error","googleAuth","dispatch","access_token","accessToken","login","Date","getTime","signoutafterOneHour","logout","removeItem","setTimeout","checkAuthState","getItem","expDate","Auth","authForm","email","validationRules","required","isEmail","valid","errorMessage","password","minLength","confirmpassword","withPassword","formIsValid","changeInputHandler","event","inputIdentifier","objectSpread","stateElement","target","checkValidity","formValid","rules","isValid","trim","test","onSubmitForm","preventDefault","confirmPassword","formElementsArray","config","onSubmit","formElement","Input_Input","toUpperCase","onAuthGoogle","ActionCreators","Signin","changeAuthHandler","isLogIn","onLogIn","loginUser","Logout","onLogout","react_router","CreateMobiles","createMobileForm","Title","Description","maxLength","Price","Model","mobile_Picture","accept","imageValue","mode","file","imageSelected","files","URL","createObjectURL","formData","FormData","append","fetch","method","body","json","fileResData","urlImg","filePath","newMobile","params","queryString","parse","location","editedMobile","editForm","encType","mobileDetail","date","useremail","onGoToMobiles","userSignedin","mobileUserId","MobileDetailContainer","Mobile_detail_Mobile_detail","createdAt","cart","onCartDecrement","quantity","onCartIncrement","removeCart","Trash","totalPrice","carts","cartList","Cart_Cart","onIncrementCart","onDecrementCart","onRemoveCart","overflowX","border","clearCart","subTotalPrice","toFixed","onOrder","CartContainer","noItemsInCart","isLoading","showPayment","onFetchCarts","car","cartId","existingCart","filteredCartIndex","newPrice","incrementItemToCart","filteredCart","decrementItemToCart","splice","onClearCart","backdropClose","textAlign","paddingTop","paddingBottom","Carts_Carts","order","orderMobiles","orders","Order_Order","OrdersContainer","noOrders","onFetchOrders","allOrders","Orders_Orders","errorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","reqInterceptors","interceptors","request","use","req","resInterceptors","response","eject","errors","message","App","checkAuth","Layout_Layout","isAuthenticated","path","component","ErrorHandler","initialState","authReducer","undefined","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","AuthReducer","applyMiddleware","next","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","module","exports","__webpack_require__"],"mappings":"2YAYeA,EARQ,SAAAC,GACnB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAIN,EAAMO,KAAMC,QAASR,EAAMS,MAAOC,OAAK,GAAEV,EAAMW,6BCMzDC,SAVE,SAAAZ,GACb,OAAIA,EAAMa,KAEFZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWI,QAASR,EAAMS,OAAQT,EAAMW,UAGpD,cCFTG,6MACFC,MAAQ,CACJC,iBAAiB,KAGrBA,gBAAkB,WACdC,EAAKC,SAAS,CAACF,iBAAiB,OAGpCG,eAAiB,WACbF,EAAKC,SAAS,CAACF,iBAAiB,6EAIhC,IAaII,EAbAC,EAAQ,CACRC,UAAW,iBAkCf,OA/BID,EADAE,KAAKR,MAAMC,gBACH,CACJM,UAAW,qBAGP,CACJA,UAAW,iBAOfF,EADAG,KAAKvB,MAAMwB,aAEPvB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,KAAlD,WACAN,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,QAAlD,UACAN,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,SAAlD,WACAN,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,WAAlD,aACAN,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,WAAlD,YAKJN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,KAAlD,WACAN,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,iBAAlD,WACAN,EAAAC,EAAAC,cAACsB,EAAD,CAAgBhB,MAAOc,KAAKP,gBAAiBT,KAAK,WAAlD,YAMRN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACAzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKwB,IAAKC,IAAYC,IAAI,WACzBN,KAAKvB,MAAM8B,UAEZ7B,EAAAC,EAAAC,cAAA,KAAGkB,MAAO,CAACU,QAAS,eAAgBC,WAAY,OAAQC,MAAO,UAA/D,WACSV,KAAKvB,MAAM8B,WAGpB,MAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVgB,IAGTnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeI,QAASe,KAAKJ,gBACxClB,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,cAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaiB,MAAOA,GAC/BpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBI,QAASe,KAAKP,iBAC5Cf,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVgB,KAIbnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKwB,IAAKC,IAAYC,IAAI,aAGlC5B,EAAAC,EAAAC,cAAC+B,EAAD,CAAUzB,MAAOc,KAAKP,gBAAiBH,MAAOU,KAAKR,MAAMC,0BAvFvCmB,aAoGfC,cAPS,SAAArB,GACpB,MAAO,CACHe,UAAWf,EAAMe,UACjBN,aAA8B,OAAhBT,EAAMsB,QAIbD,CAAyBtB,GC5FzBwB,EAXA,SAAAtC,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACXJ,EAAMW,oBCKR6B,qBAXA,SAAAxC,GACX,OACIC,EAAAC,EAAAC,cAAA,UAAQK,QAASR,EAAMyC,QACfC,KAAM1C,EAAM0C,KACZC,SAAU3C,EAAM2C,SAChBvC,UAAU,WACbJ,EAAMW,YC+CJyB,qBAPS,SAAArB,GACpB,MAAO,CACHS,aAA8B,OAAhBT,EAAMsB,MACpBO,OAAQ7B,EAAM6B,SAIPR,CAAyBS,YAlDzB,SAAA7C,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc0C,IAAK9C,EAAM+C,IACnC/C,EAAMwB,cAAgBxB,EAAM4C,SAAW5C,EAAMgD,aAE7C/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASzC,EAAMkD,UAAWP,SAAU3C,EAAMmD,YAAlD,gBAGH,KAEDlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKwB,IAAK3B,EAAMoD,MAAOvB,IAAI,iBAE/B5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAIH,EAAMqD,QAEdpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,aAAKH,EAAMsD,SAGnBrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,QAAMkB,MAAO,CAACkC,WAAY,WAAYvD,EAAM8B,UAA5C,IAAwD9B,EAAMwD,YAEhFxD,EAAMwB,aAENvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdJ,EAAM4C,SAAW5C,EAAMgD,aAExB/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACAzB,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASzC,EAAMyD,aAAvB,QACAxD,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASzC,EAAM0D,eAAvB,YAGAzD,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASzC,EAAM0D,eAAvB,YAGA,UCnCEC,SANC,SAAA3D,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aCyBRwD,EAzBI,SAAA5D,GACf,IAAI6D,EAAa5D,EAAAC,EAAAC,cAAC2D,EAAD,MAiBjB,OAhBI9D,EAAM+D,eACNF,EAAa7D,EAAMgE,QAAQC,IAAI,SAAAC,GAC3B,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,CAAQrB,IAAKoB,EAAOE,IACZrB,GAAImB,EAAOE,IACXf,MAAOa,EAAOb,MACdC,MAAOY,EAAOZ,MACdxB,UAAWoC,EAAOtB,OAAOd,UACzB0B,SAAUU,EAAOtB,OAAOY,SACxBC,YAAazD,EAAMqE,YAAYC,YAAWJ,EAAOE,KACjDpB,aAAckB,EAAOtB,OAAOwB,IAC5BV,cAAe1D,EAAMuE,WAAWD,YAAWJ,EAAOE,KAClDhB,MAAOc,EAAOM,SACdtB,UAAWlD,EAAMyE,QAAQH,YAAWJ,GACpCf,WAAYnD,EAAM0E,oBAIrCzE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACKmC,qCChBPc,6MACFC,UAAW,IACX7D,MAAQ,CACJiD,QAAS,GACTa,WAAW,EACXC,WAAW,EACXC,cAAe,KACfL,gBAAgB,KA2BpBM,WAAa,SAACjC,GACV,IAAMkC,EAAiBhE,EAAKF,MAAMiD,QAAQkB,KAAK,SAAAC,GAC3C,OAAOA,EAAEf,MAAQrB,IAErBqC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUN,IACtDhE,EAAKjB,MAAMwF,QAAQC,KAAK,CACpBC,SAAU,SAAW3C,EACrB4C,OAAQ,aACR5E,MAAO,CAACkE,eAAgBA,QAIhCW,aAAe,SAAC7C,GACZ,IAAMkC,EAAiBhE,EAAKF,MAAMiD,QAAQkB,KAAK,SAAAC,GAC3C,OAAOA,EAAEf,MAAQrB,IAErBqC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAUN,IACtDhE,EAAKjB,MAAMwF,QAAQC,KAAK,CACpBC,SAAU,WAAa3C,OAI/B8C,WAAa,WACT5E,EAAKjB,MAAMwF,QAAQC,KAAK,YAG5BK,eAAiB,WAsBbC,IAAMC,KAAK,WAAYV,KAAKC,UArBR,CAChBU,MAAK,mcAoB2C,CAACC,QAAS,CAC1DC,eAAgB,sBAChBC,KAAK,SAAAC,GACD,GAAIpF,EAAK2D,SAAU,CACf,IAAMZ,EAAUqC,EAAQC,KAAKA,KAAKtC,QAC9BA,EAAQuC,QAAU,EAClBtF,EAAKC,SAAS,CAAC2D,WAAW,IAE1B5D,EAAKC,SAAS,CAAC8C,QAASA,EAASa,WAAW,OAIvD2B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,QAIxBG,cAAgB,WACZ3F,EAAKC,SAAS,CAAC4D,WAAW,OAG9B5B,UAAY,SAACgB,GACTjD,EAAKC,SAAS,CAACwD,gBAAgB,IAC/B,IAAMmC,EAAc,CAChBZ,MAAK,upBAqBLa,UAAW,CACP5C,OAAQ,CACJE,IAAKF,EAAOE,IACZf,MAAOa,EAAOb,MACd0D,YAAa7C,EAAO6C,YACpBC,MAAO9C,EAAO8C,MACd1D,MAAOY,EAAOZ,MACdkB,SAAUN,EAAOM,YAK7BuB,IAAMC,KAAK,WAAYa,EAAa,CAACX,QAAS,CAC1CC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SAE3C+D,KAAK,SAAAc,GACFjG,EAAKC,SAAS,CAAC4D,WAAW,EAAMC,cAAemC,EAAIZ,KAAKA,KAAKpD,UAAWwB,gBAAgB,0FAtI5E,IAAAyC,EAAA5F,KAChBA,KAAKuE,iBACL,IAAMsB,EAASC,IAAW,KAC1BD,EAAOE,GAAG,YAAa,SAAAhB,GACnBa,EAAKjG,SAAS,SAAAqG,GACV,MAAO,CACHvD,QAASuD,EAAUvD,QAAQwD,OAAOlB,EAAKpC,aAInDkD,EAAOE,GAAG,eAAgB,SAAChB,GACvB,IAAMmB,EAAWC,OAAAC,EAAA,EAAAD,CAAOP,EAAKpG,MAAMiD,SAInCyD,EAH4BN,EAAKpG,MAAMiD,QAAQ4D,UAAU,SAAA1D,GACrD,OAAOA,EAAOE,MAAQkC,EAAKpC,OAAOE,OAEHkC,EAAKpC,OACxCiD,EAAKjG,SAAS,CAAC8C,QAASyD,qDAK5BlG,KAAKqD,UAAW,mCAsHhB,OACI3E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACAzB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,OAAkCH,EAAAC,EAAAC,cAAA,wBAClCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVmB,KAAKR,MAAM8D,UAAY5E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,yBACZH,EAAAC,EAAAC,cAAC0H,EAAD,CAAY7D,QAASzC,KAAKR,MAAMiD,QACpBD,aAAcxC,KAAKR,MAAMiD,QAAQuC,OAAS,EAC1ClC,YAAa9C,KAAKyD,WAClBT,WAAYhD,KAAKqE,aACjBnB,QAASlD,KAAK2B,UACdwB,eAAgBnD,KAAKR,MAAM2D,kBAGtDnD,KAAKR,MAAM+D,UAEX7E,EAAAC,EAAAC,cAAC+B,EAAD,CAAUrB,MAAI,EAACJ,MAAOc,KAAKqF,eAC3B3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKwB,IAAKJ,KAAKR,MAAMgE,cAAc+C,SAAStD,SAAU3C,IAAI,iBAE9D5B,EAAAC,EAAAC,cAAA,SAAIoB,KAAKR,MAAMgE,cAAc+C,SAASzE,OACtCpD,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,gBAAQoB,KAAKR,MAAMgE,cAAc+C,SAASxE,QACpDrD,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAAC0G,UAAW,QACpB9H,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASlB,KAAKqF,eAAtB,sBAEJ3G,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAAC0G,UAAW,QACpB9H,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASlB,KAAKsE,YAAtB,iBAKT,aArLU1D,aAkMPC,cANS,SAAArB,GACpB,MAAO,CACHsB,MAAOtB,EAAMsB,QAIND,CAAyBuC,UClIzBqD,iBAtED,SAAAhI,GACV,IAAIiI,EACAC,EAAU,CAAC,aACXC,EAAkB,CAAC,gBACnBC,EAAgBnI,EAAAC,EAAAC,cAAA,UA0BpB,OAzBIH,EAAMqI,WACNF,EAAgB1C,KAAK,eAErBzF,EAAMsI,UACFtI,EAAMuI,SACNL,EAAQzC,KAAK,WACoB,UAA7BzF,EAAMwI,cAAcC,OACpBL,EAAgBnI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,qBAEa,cAA7BJ,EAAMwI,cAAcC,OACpBL,EAAgBnI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,2BAEa,aAA7BJ,EAAMwI,cAAcC,OACpBL,EAAgBnI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,2BAEa,aAA7BJ,EAAMwI,cAAcC,OACpBL,EAAgBnI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,6CAEa,oBAA7BJ,EAAMwI,cAAcC,OACpBL,EAAgBnI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,+BAGpB8H,EAAQzC,KAAK,UAGdzF,EAAM0I,aACT,IAAK,QACDT,EAAYhI,EAAAC,EAAAC,cAAA,QAAAuH,OAAAiB,OAAA,GACQ3I,EAAMwI,cADd,CAEII,MAAO5I,EAAM4I,MACbC,SAAU7I,EAAM8I,QAChB1I,UAAW8H,EAAQa,KAAK,QACxC,MACJ,IAAK,WACDd,EAAYhI,EAAAC,EAAAC,cAAA,WAAAuH,OAAAiB,OAAA,GACQ3I,EAAMwI,cADd,CAEII,MAAO5I,EAAM4I,MACbC,SAAU7I,EAAM8I,WAChC,MACJ,IAAK,SACDb,EACAhI,EAAAC,EAAAC,cAAA,UAAQyI,MAAO5I,EAAM4I,MAAOC,SAAU7I,EAAM8I,SACvC9I,EAAMwI,cAAcQ,QAAQ/E,IAAI,SAAAgF,GAC7B,OACIhJ,EAAAC,EAAAC,cAAA,UAAQ2C,IAAKmG,EAAOL,MAAOA,MAAOK,EAAOL,OAAQK,EAAOC,iBAIpE,MACJ,QACIjB,EAAYhI,EAAAC,EAAAC,cAAA,QAAAuH,OAAAiB,OAAA,GACY3I,EAAMwI,cADlB,CAEQI,MAAO5I,EAAM4I,MACbC,SAAU7I,EAAM8I,QAChB1I,UAAW8H,EAAQa,KAAK,QAEpD,OACI9I,EAAAC,EAAAC,cAAA,OAAKC,UAAW+H,EAAgBY,KAAK,MACjC9I,EAAAC,EAAAC,cAAA,aAAQH,EAAMmJ,OACblB,EACAG,KCjEAgB,EAAc,SAAC/G,EAAOO,EAAQd,GACvC,MAAO,CACHY,KCLa,QDMbL,MAAOA,EACPO,OAAQA,EACRd,UAAWA,EACXuH,MAAO,OAIFC,EAAa,SAAChD,GACvB,OAAO,SAAAiD,GACH,OAAOxD,IAAMC,KAAK,gBAAiB,CAC/BwD,aAAclD,EAAKmD,cACpBrD,KAAK,SAAAc,GACJqC,EAASG,EAAMxC,EAAIZ,KAAKjE,MAAO6E,EAAIZ,KAAK1D,OAAQsE,EAAIZ,KAAKxE,cAE5D0E,MAAM,SAAAC,GACHC,QAAQC,IAAIF,OAKXiD,EAAQ,SAACrH,EAAOO,EAAQd,GAKjC,OAJAsD,aAAaC,QAAQ,QAAShD,GAC9B+C,aAAaC,QAAQ,SAAUzC,GAC/BwC,aAAaC,QAAQ,YAAavD,GAClCsD,aAAaC,QAAQ,WAAW,IAAIsE,MAAOC,UAAa,MACjD,SAAAL,GACHA,EAASH,EAAY/G,EAAOO,EAAQd,IACpCyH,EAASM,OAIJC,EAAS,WAKlB,OAJA1E,aAAa2E,WAAW,SACxB3E,aAAa2E,WAAW,UACxB3E,aAAa2E,WAAW,aACxB3E,aAAa2E,WAAW,WACjB,CACHrH,KC1Cc,WD8CTmH,EAAsB,WAC/B,OAAO,SAAAN,GACHS,WAAW,WACPT,EAASO,MACV,QAIEG,EAAiB,WAC1B,OAAO,SAAAV,GACH,IAAMlH,EAAQ+C,aAAa8E,QAAQ,SAC7BC,EAAU,IAAIR,KAAKvE,aAAa8E,QAAQ,YACxCtH,EAASwC,aAAa8E,QAAQ,UAC/B7H,EAGG,IAAIsH,KAASQ,EACbZ,EAASO,MAETP,EAASH,EAAY/G,EAAOO,EAAQwC,aAAa8E,QAAQ,eACzDX,EAASM,MANbN,EAASO,OEpDfM,6MACFrJ,MAAQ,CACJsJ,SAAU,CACNC,MAAO,CACH5B,YAAa,QACbF,cAAe,CACXC,KAAM,QACN/F,KAAM,SAEV6H,gBAAiB,CACbC,UAAU,EACVC,SAAS,GAEb7B,MAAO,GACP8B,OAAO,EACPpC,SAAS,EACTqC,aAAc,GACd9J,MAAM,GAEViB,UAAW,CACP4G,YAAa,QACbF,cAAe,CACXC,KAAM,YACN/F,KAAM,QAEV6H,gBAAiB,CACbC,UAAU,GAEd5B,MAAO,GACP8B,OAAO,EACPpC,SAAS,EACTqC,aAAc,GACd9J,MAAM,GAEV2C,SAAU,CACNkF,YAAa,QACbF,cAAe,CACXC,KAAM,WACN/F,KAAM,QAEV6H,gBAAiB,CACbC,UAAU,GAEd5B,MAAO,GACP8B,OAAO,EACPpC,SAAS,EACTqC,aAAc,GACd9J,MAAM,GAEV+J,SAAU,CACNlC,YAAa,QACbF,cAAe,CACXC,KAAM,WACN/F,KAAM,YAEV6H,gBAAiB,CACbC,UAAU,EACVK,WAAW,GAEfjC,MAAO,GACP8B,OAAO,EACPpC,SAAS,EACTqC,aAAc,GACd9J,MAAM,GAEViK,gBAAiB,CACbpC,YAAa,QACbF,cAAe,CACXC,KAAM,kBACN/F,KAAM,YAEV6H,gBAAiB,CACbC,UAAU,EACVO,cAAc,GAElBnC,MAAO,GACP8B,OAAO,EACPpC,SAAS,EACTqC,aAAc,GACd9J,MAAM,IAGdmK,aAAa,KAGjBC,mBAAqB,SAACC,EAAOC,GACzB,IAAMd,EAAQ3C,OAAA0D,EAAA,EAAA1D,CAAA,GAAOzG,EAAKF,MAAMsJ,UAC1BgB,EAAY3D,OAAA0D,EAAA,EAAA1D,CAAA,GAAO2C,EAASc,IAClCE,EAAazC,MAAQsC,EAAMI,OAAO1C,MAClCyC,EAAa/C,SAAU,EACvB+C,EAAaX,MAAQzJ,EAAKsK,cAAcF,EAAazC,MAAOyC,EAAad,iBACzEF,EAASc,GAAmBE,EAE5B,IAAIG,GAAY,EAChB,IAAK,IAAI1I,KAAOuH,EACZmB,EAAYnB,EAASvH,GAAK4H,OAASc,EAEvCvK,EAAKC,SAAS,CAACmJ,SAAUA,EAAUW,YAAaQ,OAGpDD,cAAgB,SAAC3C,EAAO6C,GACpB,IAAIC,GAAU,EAKd,GAJID,EAAMjB,WACNkB,EAA2B,KAAjB9C,EAAM+C,QAAiBD,GAGjCD,EAAMhB,QAAS,CAEfiB,EADW,0JACEE,KAAKhD,IAAU8C,EAWhC,OARID,EAAMZ,YACNa,EAAU9C,EAAMrC,QAAU,GAAKmF,GAG/BD,EAAMV,eACNW,EAAU9C,IAAU3H,EAAKF,MAAMsJ,SAASO,SAAShC,OAAS8C,GAGvDA,KAGXG,aAAe,SAACX,GAEZ,IAAIrE,EADJqE,EAAMY,iBAEN,IAAMxB,EAAQrJ,EAAKF,MAAMsJ,SAASC,MAAM1B,MAClCgC,EAAW3J,EAAKF,MAAMsJ,SAASO,SAAShC,MACxC9G,EAAYb,EAAKF,MAAMsJ,SAASvI,UAAU8G,MAC1CpF,EAAWvC,EAAKF,MAAMsJ,SAAS7G,SAASoF,MAG1C/B,EAAc,CACVZ,MAAK,8rBAgBLa,UAAW,CACPwD,MAAOA,EACPM,SAAUA,EACVmB,gBAtBY9K,EAAKF,MAAMsJ,SAASS,gBAAgBlC,MAuBhD9G,UAAWA,EACX0B,SAAUA,IAItBuC,IAAMC,KAAK,WAAYV,KAAKC,UAAUsB,GAAc,CAACX,QAAS,CAC1DC,eAAgB,sBAChBC,KAAK,SAAAC,GACDpF,EAAKjB,MAAMwF,QAAQC,KAAK,aAE3Be,MAAM,SAAAC,+EAQN,IAAAU,EAAA5F,KACDyK,EAAoB,GACxB,IAAK,IAAIlJ,KAAOvB,KAAKR,MAAMsJ,SACvB2B,EAAkBvG,KAAK,CACnB1C,GAAID,EACJmJ,OAAQ1K,KAAKR,MAAMsJ,SAASvH,KAIpC,OACI7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAa8L,SAAU3K,KAAKsK,cACvCG,EAAkB/H,IAAI,SAAAkI,GACnB,OACQlM,EAAAC,EAAAC,cAACiM,EAAD,CAAOtJ,IAAKqJ,EAAYpJ,GACjB2F,YAAayD,EAAYF,OAAOvD,YAChCF,cAAe2D,EAAYF,OAAOzD,cAClCI,MAAOuD,EAAYF,OAAOrD,MAC1BO,MAAOgD,EAAYpJ,GAAGsJ,cACtBvD,QAAS,SAACoC,GAAD,OAAW/D,EAAK8D,mBAAmBC,EAAOiB,EAAYpJ,KAC/DwF,SAAU4D,EAAYF,OAAOvB,MAC7BpC,QAAS6D,EAAYF,OAAO3D,QAC5Be,MAAO8C,EAAYF,OAAOtB,aAC1BtC,WAAY8D,EAAYF,OAAOpL,SAGlDZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQP,KAAK,SACLC,UAAWpB,KAAKR,MAAMiK,aAD9B,sBAtML7I,aA6NJC,cAAQ,KANI,SAAAmH,GACvB,MAAO,CACH+C,aAAc,SAAChG,GAAD,OAAUiD,EAASgD,EAA0BjG,OAIpDlE,CAAkCgI,GC9N3CoC,6MACFzL,MAAQ,CACJsJ,SAAU,CACNC,MAAO,CACH5B,YAAa,QACbF,cAAe,CACXC,KAAM,QACN/F,KAAM,SAEV6H,gBAAiB,CACbC,UAAU,EACVC,SAAS,GAEb7B,MAAO,GACP8B,OAAO,EACPpC,SAAS,GAEbsC,SAAU,CACNlC,YAAa,QACbF,cAAe,CACXC,KAAM,WACN/F,KAAM,YAEV6H,gBAAiB,CACbC,UAAU,EACVK,WAAW,GAEfjC,MAAO,GACP8B,OAAO,EACPpC,SAAS,GAEbwC,gBAAiB,CACbpC,YAAa,QACbF,cAAe,CACXC,KAAM,kBACN/F,KAAM,YAEV6H,gBAAiB,CACbC,UAAU,EACVO,cAAc,GAElBnC,MAAO,GACP8B,OAAO,EACPpC,SAAS,IAGjB0C,aAAa,KAGjByB,kBAAoB,WACZxL,EAAKC,SAAS,SAAAqG,GACV,MAAO,CACHmF,SAAUnF,EAAUmF,cAKpCzB,mBAAqB,SAACC,EAAOC,GACzB,IAAMd,EAAQ3C,OAAA0D,EAAA,EAAA1D,CAAA,GAAOzG,EAAKF,MAAMsJ,UAC1BgB,EAAY3D,OAAA0D,EAAA,EAAA1D,CAAA,GAAO2C,EAASc,IAClCE,EAAazC,MAAQsC,EAAMI,OAAO1C,MAClCyC,EAAa/C,SAAU,EACvB+C,EAAaX,MAAQzJ,EAAKsK,cAAcF,EAAazC,MAAOyC,EAAad,iBACzEF,EAASc,GAAmBE,EAE5B,IAAIG,GAAY,EAChB,IAAK,IAAI1I,KAAOuH,EACZmB,EAAYnB,EAASvH,GAAK4H,OAASc,EAEvCvK,EAAKC,SAAS,CAACmJ,SAAUA,EAAUW,YAAaQ,OAGpDD,cAAgB,SAAC3C,EAAO6C,GACpB,IAAIC,GAAU,EAKd,GAJID,EAAMjB,WACNkB,EAA2B,KAAjB9C,EAAM+C,QAAiBD,GAGjCD,EAAMhB,QAAS,CAEfiB,EADW,0JACEE,KAAKhD,IAAU8C,EAWhC,OARID,EAAMZ,YACNa,EAAU9C,EAAMrC,QAAU,GAAKmF,GAG/BD,EAAMV,eACNW,EAAU9C,IAAU3H,EAAKF,MAAMsJ,SAASO,SAAShC,OAAS8C,GAGvDA,KAGXG,aAAe,SAACX,GAEZ,IAAIrE,EADJqE,EAAMY,iBAKNjF,EAAc,CACVZ,MAAK,qVAULa,UAAW,CACPwD,MAfMrJ,EAAKF,MAAMsJ,SAASC,MAAM1B,MAgBhCgC,SAfS3J,EAAKF,MAAMsJ,SAASO,SAAShC,QAmB9C7C,IAAMC,KAAK,WAAYV,KAAKC,UAAUsB,GAAc,CAACX,QAAS,CAC1DC,eAAgB,sBAChBC,KAAK,SAAAC,GACDpF,EAAKjB,MAAM2M,QAAQtG,EAAQC,KAAKA,KAAKsG,UAAUvK,MAAOgE,EAAQC,KAAKA,KAAKsG,UAAUhK,OAAQyD,EAAQC,KAAKA,KAAKsG,UAAU9K,WACtHb,EAAKjB,MAAMiK,iBACXhJ,EAAKjB,MAAMwF,QAAQC,KAAK,OAE3Be,MAAM,SAAAC,+EAQN,IAAAU,EAAA5F,KACDyK,EAAoB,GACxB,IAAK,IAAIlJ,KAAOvB,KAAKR,MAAMsJ,SACvB2B,EAAkBvG,KAAK,CACnB1C,GAAID,EACJmJ,OAAQ1K,KAAKR,MAAMsJ,SAASvH,KAIpC,OACI7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAa8L,SAAU3K,KAAKsK,cACvCG,EAAkB/H,IAAI,SAAAkI,GACnB,OACQlM,EAAAC,EAAAC,cAACiM,EAAD,CAAOtJ,IAAKqJ,EAAYpJ,GACjB2F,YAAayD,EAAYF,OAAOvD,YAChCF,cAAe2D,EAAYF,OAAOzD,cAClCI,MAAOuD,EAAYF,OAAOrD,MAC1BO,MAAOgD,EAAYpJ,GAAGsJ,cACtBvD,QAAS,SAACoC,GAAD,OAAW/D,EAAK8D,mBAAmBC,EAAOiB,EAAYpJ,KAC/DwF,SAAU4D,EAAYF,OAAOvB,MAC7BpC,QAAS6D,EAAYF,OAAO3D,YAG/CrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQP,KAAK,SACLC,UAAWpB,KAAKR,MAAMiK,aAD9B,sBA9JH7I,aAsLNC,cAAQ,KARI,SAAAmH,GACvB,MAAO,CACHoD,QAAS,SAACtK,EAAOO,EAAQd,GAAhB,OAA8ByH,EAASgD,EAAqBlK,EAAOO,EAAQd,KACpFmI,eAAgB,kBAAMV,EAASgD,MAC/BD,aAAc,SAAChG,GAAD,OAAUiD,EAASgD,EAA0BjG,OAIpDlE,CAAkCoK,GCzL3CK,8LAEEtL,KAAKvB,MAAM8M,4CAGX,OACI7M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAUzM,GAAG,cAPR6B,aAmBNC,cAAQ,KANI,SAAAmH,GACvB,MAAO,CACHuD,SAAU,kBAAMvD,EAASgD,QAIlBnK,CAAkCyK,oBChB3CG,6MAEFjM,MAAQ,CACJkM,iBAAkB,CACdC,MAAO,CACHxE,YAAa,QACbF,cAAe,CACXC,KAAM,QACN/F,KAAM,QAEV6H,gBAAiB,CACbC,UAAU,GAEd5B,MAAO,GACP8B,OAAO,EACPpC,SAAS,GAEb6E,YAAa,CACTzE,YAAa,WACbF,cAAe,CACXC,KAAM,cACN/F,KAAM,QAEV6H,gBAAiB,CACbC,UAAU,EACV4C,WAAW,GAEfxE,MAAO,GACP8B,OAAO,EACPpC,SAAS,GAEb+E,MAAO,CACH3E,YAAa,QACbF,cAAe,CACXC,KAAM,QACN/F,KAAM,UAEV6H,gBAAiB,CACbC,UAAU,GAEd5B,MAAO,GACP8B,OAAO,EACPpC,SAAS,GAEbgF,MAAO,CACH5E,YAAa,SACbF,cAAe,CACXQ,QAAS,CACL,CAACJ,MAAO,UAAWM,aAAc,WACjC,CAACN,MAAO,SAAUM,aAAc,UAChC,CAACN,MAAO,OAAQM,aAAc,QAC9B,CAACN,MAAO,OAAQM,aAAc,QAC9B,CAACN,MAAO,QAASM,aAAc,SAC/B,CAACN,MAAO,SAAUM,aAAc,UAChC,CAACN,MAAO,OAAQM,aAAc,UAGtCqB,gBAAiB,CACbC,UAAU,EACVK,WAAW,GAEfjC,MAAO,UACP8B,OAAO,EACPpC,SAAS,GAEbiF,eAAgB,CACZ7E,YAAa,QACbF,cAAe,CACX9F,KAAM,OACN+F,KAAM,MACN+E,OAAQ,qBAEZjD,gBAAiB,CACbC,UAAU,GAEd5B,MAAO,GACP6E,WAAY,GACZ/C,OAAO,EACPpC,SAAS,IAGjB0C,aAAa,EACb0C,KAAM,SACNzI,eAAgB,KAChB0I,KAAM,KACNC,cAAe,QAGnB3C,mBAAqB,SAACC,EAAOC,GACzB,IAAM8B,EAAgBvF,OAAA0D,EAAA,EAAA1D,CAAA,GAAOzG,EAAKF,MAAMkM,kBAClC5B,EAAY3D,OAAA0D,EAAA,EAAA1D,CAAA,GAAOuF,EAAiB9B,IAE1C,GADAE,EAAazC,MAAQsC,EAAMI,OAAO1C,MACV,mBAApBuC,GAAwCD,EAAMI,OAAOuC,MAAM,GAAI,CAC/D,IAAMF,EAAOzC,EAAMI,OAAOuC,MAAM,GAChC5M,EAAKC,SAAS,CAACyM,KAAMA,EAAMC,cAAeE,IAAIC,gBAAgBJ,KAElEtC,EAAa/C,SAAU,EACvB+C,EAAaX,MAAQzJ,EAAKsK,cAAcF,EAAazC,MAAOyC,EAAad,iBACzE0C,EAAiB9B,GAAmBE,EAEpC,IAAIG,GAAY,EAChB,IAAK,IAAI1I,KAAOmK,EACZzB,EAAYyB,EAAiBnK,GAAK4H,OAASc,EAE/CvK,EAAKC,SAAS,CAAC+L,iBAAkBA,EAAkBjC,YAAaQ,OAiCpED,cAAgB,SAAC3C,EAAO6C,GACpB,IAAIC,GAAU,EASd,OARID,EAAMjB,WACNkB,EAA2B,KAAjB9C,EAAM+C,QAAiBD,GAGjCD,EAAM2B,YACN1B,EAAU9C,EAAMrC,OAAS,KAAOmF,GAG7BA,KAIXG,aAAe,SAACX,GACZA,EAAMY,iBACN7K,EAAKC,SAAS,CAAC8J,aAAa,IAC5B,IAAMgD,EAAW,IAAIC,SACrBD,EAASE,OAAO,MAAOjN,EAAKF,MAAM4M,MAClCQ,MAAM,mCAAoC,CACtCC,OAAQ,MACRlI,QAAS,CACPe,cAAe,UAAYhG,EAAKjB,MAAMqC,OAExCgM,KAAML,IACL5H,KAAK,SAAAc,GAAG,OAAIA,EAAIoH,SAClBlI,KAAK,SAAAmI,GACF,IAKI1H,EALE2H,EAASD,EAAYE,SACrBpL,EAAQpC,EAAKF,MAAMkM,iBAAiBC,MAAMtE,MAC1C7B,EAAc9F,EAAKF,MAAMkM,iBAAiBE,YAAYvE,MACtDtF,GAASrC,EAAKF,MAAMkM,iBAAiBI,MAAMzE,MAC3C5B,EAAQ/F,EAAKF,MAAMkM,iBAAiBK,MAAM1E,MA4DhD,OAzDI/B,EADoB,WAApB5F,EAAKF,MAAM2M,KACG,CACVzH,MAAK,+qBAcLa,UAAW,CACPzD,MAAOA,EACP0D,YAAaA,EACbzD,MAAOA,EACP0D,MAAOA,EACPxC,SAAUgK,IAKJ,CACVvI,MAAK,yxBAkBLa,UAAW,CACPgB,SAAU7G,EAAKF,MAAMkE,eAAeb,IACpCsK,UAAW,CACPrL,MAAOpC,EAAKF,MAAMkM,iBAAiBC,MAAMtE,MACzC7B,YAAa9F,EAAKF,MAAMkM,iBAAiBE,YAAYvE,MACrDtF,OAAQrC,EAAKF,MAAMkM,iBAAiBI,MAAMzE,MAC1C5B,MAAO/F,EAAKF,MAAMkM,iBAAiBK,MAAM1E,MACzCpE,SAAUgK,KAMnBzI,IAAMC,KAAK,WAAYV,KAAKC,UAAUsB,GAAc,CAACX,QAAS,CACjEC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SACxC+D,KAAK,SAAAC,GACDpF,EAAKjB,MAAMwF,QAAQC,KAAK,OAE3Be,MAAM,SAAAC,GACHC,QAAQC,IAAIF,2FA/H1B,IAAIkI,EAASC,IAAYC,MAAMtN,KAAKvB,MAAM8O,SAASnJ,QACnD,IAAK,IAAI7C,KAAO6L,EACZ,GAAIA,EAAO7L,GAAM,CACb,IAAMiM,EAAexN,KAAKvB,MAAM8O,SAAS/N,MAAMkE,eACzC+J,EAAQtH,OAAA0D,EAAA,EAAA1D,CAAA,GAAOnG,KAAKR,MAAMkM,kBAC1B5J,EAAKqE,OAAA0D,EAAA,EAAA1D,CAAA,GAAOsH,EAAQ,OACpBjI,EAAWW,OAAA0D,EAAA,EAAA1D,CAAA,GAAOsH,EAAQ,aAC1B1L,EAAKoE,OAAA0D,EAAA,EAAA1D,CAAA,GAAOsH,EAAQ,OACpBhI,EAAKU,OAAA0D,EAAA,EAAA1D,CAAA,GAAOsH,EAAQ,OAC1B3L,EAAMuF,MAAQmG,EAAa1L,MAC3BA,EAAMqH,OAAQ,EACd3D,EAAY6B,MAAQmG,EAAahI,YACjCA,EAAY2D,OAAQ,EACpBpH,EAAMsF,MAAQmG,EAAazL,MAC3BA,EAAMoH,OAAQ,EACd1D,EAAM4B,MAAQmG,EAAa/H,MAC3BA,EAAM0D,OAAQ,EACdsE,EAAQ,MAAY3L,EACpB2L,EAAQ,YAAkBjI,EAC1BiI,EAAQ,MAAY1L,EACpB0L,EAAQ,MAAYhI,EACpBzF,KAAKL,SAAS,CAAC+L,iBAAkB+B,EAAUtB,KAAM,OAAQzI,eAAgB8J,SAGzExN,KAAKL,SAAS,CAACwM,KAAM,4CA4GxB,IAAAvG,EAAA5F,KACDyK,EAAoB,GACxB,IAAK,IAAIlJ,KAAOvB,KAAKR,MAAMkM,iBACvBjB,EAAkBvG,KAAK,CACnB1C,GAAID,EACJmJ,OAAQ1K,KAAKR,MAAMkM,iBAAiBnK,KAI5C,OACI7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAyB,WAApBoB,KAAKR,MAAM2M,KAAoB,2BAA6B,oBACjEzN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAa8L,SAAU3K,KAAKsK,aAAcoD,QAAQ,uBAC7DjD,EAAkB/H,IAAI,SAAAkI,GACnB,OACQlM,EAAAC,EAAAC,cAACiM,EAAD,CAAOtJ,IAAKqJ,EAAYpJ,GACjB2F,YAAayD,EAAYF,OAAOvD,YAChCF,cAAe2D,EAAYF,OAAOzD,cAClCI,MAAOuD,EAAYF,OAAOrD,MAC1BO,MAAOgD,EAAYpJ,GAAGsJ,cACtBvD,QAAS,SAACoC,GAAD,OAAW/D,EAAK8D,mBAAmBC,EAAOiB,EAAYpJ,KAC/DwF,SAAU4D,EAAYF,OAAOvB,MAC7BpC,QAAS6D,EAAYF,OAAO3D,YAG9C/G,KAAKR,MAAM6M,cAEX3N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,OAAKwB,IAAKJ,KAAKR,MAAM6M,cAAe/L,IAAI,iBAG3C,KACD5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQP,KAAK,SACLC,UAAWpB,KAAKR,MAAMiK,aACL,WAApBzJ,KAAKR,MAAM2M,KAAoB,oBAAsB,yBAnRtDvL,aAmSbC,cAPS,SAAArB,GACpB,MAAO,CACHsB,MAAOtB,EAAMsB,MACbO,OAAQ7B,EAAM6B,SAIPR,CAAyB4K,GCnQzBkC,UApCM,SAAAlP,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAKH,EAAMqD,OACXpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKwB,IAAK3B,EAAMoD,MAAOvB,IAAI,aAE/B5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,YAAOH,EAAMgH,QACxB/G,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,gBAAQH,EAAMsD,QACzBrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,SAAIH,EAAM+G,cAEd9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,gDAAuCF,EAAAC,EAAAC,cAAA,YAAOH,EAAMmP,OACpDlP,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,YAAOH,EAAM8B,UAAb,IAAyB9B,EAAMwD,WAC9CvD,EAAAC,EAAAC,cAAA,4CAAmCF,EAAAC,EAAAC,cAAA,YAAOH,EAAMoP,aAEpDnP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASzC,EAAMqP,eAAvB,uBACCrP,EAAMsP,eAAiBtP,EAAMuP,aAE7BtP,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASzC,EAAMkD,UAAUoB,YAAWtE,EAAM+C,GAAI/C,EAAMqD,MAAOrD,EAAM+G,YAAa/G,EAAMgH,MAAOhH,EAAMsD,MAAOtD,EAAMoD,OACtHT,SAAU3C,EAAMmD,YADhB,eAGA,WC1BnBqM,6MACFzO,MAAQ,CACJkE,eAAgB,KAChBP,gBAAgB,KAMpBxB,UAAY,SAACH,EAAIM,EAAO0D,EAAaC,EAAO1D,EAAOkB,GAC/CvD,EAAKC,SAAS,CAACwD,gBAAgB,IAC/B,IAAMmC,EAAc,CAChBZ,MAAK,upBAqBLa,UAAW,CACP5C,OAAQ,CACJE,IAAKrB,EACLM,MAAOA,EACP0D,YAAaA,EACbC,MAAOA,EACP1D,MAAOA,EACPkB,SAAUA,KAKtBuB,IAAMC,KAAK,WAAYa,EAAa,CAACX,QAAS,CAC1CC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SAE3C+D,KAAK,SAAAc,GACFjG,EAAKjB,MAAMwF,QAAQC,KAAK,cAIhC4J,cAAgB,WACZpO,EAAKjB,MAAMwF,QAAQC,KAAK,0FAjDxBlE,KAAKL,SAAS,CAAC+D,eAAgBK,KAAKuJ,MAAMzJ,aAAa8E,QAAQ,sDAoD/D,OACIjK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsP,EAAD,CAAcpM,MAAO9B,KAAKR,MAAMkE,eAAe5B,MACjC0D,YAAaxF,KAAKR,MAAMkE,eAAe8B,YACvCzD,MAAO/B,KAAKR,MAAMkE,eAAe3B,MACjC0D,MAAOzF,KAAKR,MAAMkE,eAAe+B,MACjCqI,cAAe9N,KAAK8N,cACpBF,KAAM5N,KAAKR,MAAMkE,eAAeyK,UAChC5N,UAAWP,KAAKR,MAAMkE,eAAerC,OAAOd,UAC5CiB,GAAIxB,KAAKR,MAAMkE,eAAeb,IAC9BZ,SAAUjC,KAAKR,MAAMkE,eAAerC,OAAOY,SAC3C4L,UAAW7N,KAAKR,MAAMkE,eAAerC,OAAO0H,MAC5ClH,MAAO7B,KAAKR,MAAMkE,eAAeT,SACjCtB,UAAW3B,KAAK2B,UAChBC,WAAY5B,KAAKR,MAAM2D,eACvB6K,aAAchO,KAAKR,MAAMkE,eAAerC,OAAOwB,IAC/CkL,aAAc/N,KAAKvB,MAAM4C,iBA1EnBT,aAuFrBC,cAPS,SAAArB,GACpB,MAAO,CACHsB,MAAOtB,EAAMsB,MACbO,OAAQ7B,EAAM6B,SAIPR,CAAyBoN,gCCnEzBG,GArBF,SAAA3P,GACT,OACIC,EAAAC,EAAAC,cAAA,MAAI2C,IAAK9C,EAAM+C,IACX9C,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKwB,IAAK3B,EAAMwE,SAAU3C,IAAI,oBAGtC5B,EAAAC,EAAAC,cAAA,UAAKH,EAAMqD,OACXpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,IAAmCJ,EAAMsD,OACzCrD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMK,QAASR,EAAM4P,iBAArB,KAAJ,IAAoD5P,EAAM6P,SAA1D,IAAoE5P,EAAAC,EAAAC,cAAA,QAAMK,QAASR,EAAM8P,iBAArB,MACpE7P,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcI,QAASR,EAAM+P,YACxC9P,EAAAC,EAAAC,cAAA,OAAKwB,IAAKqO,KAAOnO,IAAI,iBAG7B5B,EAAAC,EAAAC,cAAA,cAAMH,EAAMiQ,cCgCTC,WA/CD,SAAAlQ,GACV,IAAMmQ,EAAWnQ,EAAMkQ,MAAMjM,IAAI,SAAA0L,GAC7B,OAAO1P,EAAAC,EAAAC,cAACiQ,GAAD,CAAMtN,IAAK6M,EAAKvL,IACVrB,GAAI4M,EAAKvL,IACTd,MAAOqM,EAAK7H,SAASxE,MACrBkB,SAAUmL,EAAK7H,SAAStD,SACxBqL,SAAUF,EAAKE,SACfxM,MAAOsM,EAAK7H,SAASzE,MACrB4M,WAAYN,EAAKE,SAAWF,EAAK7H,SAASxE,MAC1CwM,gBAAiB9P,EAAMqQ,gBAAgB/L,YAAWqL,EAAKvL,KACvDwL,gBAAiB5P,EAAMsQ,gBAAgBhM,YAAWqL,EAAKvL,KACvD2L,WAAY/P,EAAMuQ,aAAajM,YAAWqL,EAAKvL,SAEhE,OACInE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACAzB,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACmP,UAAW,SACpBvQ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcqQ,OAAO,KAClCxQ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACKgQ,KAIblQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaI,QAASR,EAAM0Q,WAA9C,cACAzQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,gBAAQH,EAAM2Q,gBAC3B1Q,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,iBAA+B,GAAtBH,EAAM2Q,eAAqBC,QAAQ,KACpD3Q,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,iBAASH,EAAM2Q,cAAuC,GAAtB3Q,EAAM2Q,eAAsBC,QAAQ,MAElF3Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQR,QAASzC,EAAM6Q,QAASlO,SAAU3C,EAAMmD,YAAhD,mBCvCV2N,8MACFlM,UAAW,IACX7D,MAAQ,CACJmP,MAAO,GACPa,eAAe,EACflB,SAAU,EACVI,WAAY,EACZe,WAAW,EACX7N,YAAY,EACZ8N,aAAa,KAWjBC,aAAe,WACXjQ,EAAKC,SAAS,CAAC8P,WAAW,IAC1B,IAAMnK,EAAc,CAChBZ,MAAK,8mBAoBLa,UAAW,CACPlE,OAAQwC,aAAa8E,QAAQ,YAGrCnE,IAAMC,KAAK,WAAYV,KAAKC,UAAUsB,GAAc,CAACX,QAAS,CAC1DC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SACxC+D,KAAK,SAAAC,GACDpF,EAAK2D,WACLyB,EAAQC,KAAKA,KAAKqJ,KAAK1L,IAAI,SAAAkN,GACvBlQ,EAAKC,SAAS,SAAAqG,GACV,MAAO,CACH0I,WAAY1I,EAAU0I,YAAekB,EAAIrJ,SAASxE,MAAQ6N,EAAItB,cAItExJ,EAAQC,KAAKA,KAAKqJ,KAAKpJ,QAAU,EACjCtF,EAAKC,SAAS,CAAC6P,eAAe,EAAMC,WAAW,IAE/C/P,EAAKC,SAAS,CAACgP,MAAO7J,EAAQC,KAAKA,KAAKqJ,KAAMoB,eAAe,EAAOC,WAAW,OAItFxK,MAAM,SAAAC,GACHxF,EAAKC,SAAS,CAAC8P,WAAW,EAAOD,eAAe,IAChD/G,WAAW,WACP/I,EAAKjB,MAAMwF,QAAQC,KAAK,kBACzB,UAIfqK,gBAAkB,SAAC/M,GACf9B,EAAKC,SAAS,CAAC8P,WAAW,IAC1B,IAAMnK,EAAc,CAChBZ,MAAK,meAeLa,UAAW,CACPsK,OAAQrO,IAIhBgD,IAAMC,KAAK,WAAYV,KAAKC,UAAUsB,GAAc,CAACX,QAAS,CAC1DC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SACxC+D,KAAK,SAAAC,GACD,IAAIgL,EAAY3J,OAAAC,EAAA,EAAAD,CAAOzG,EAAKF,MAAMmP,OAC5BoB,EAAoBD,EAAazJ,UAAU,SAAAzC,GAC7C,OAAOA,EAAEf,MAAQrB,IAErBsO,EAAaC,GAAmBzB,UAAY,EAC5C,IAAM0B,EAAWtQ,EAAKF,MAAMkP,WAAa5J,EAAQC,KAAKA,KAAKkL,oBAAoB1J,SAASxE,MACxFrC,EAAKC,SAAS,CAACgP,MAAOmB,EAAcpB,WAAYsB,EAAUP,WAAW,MAExExK,MAAM,SAAAC,GACHxF,EAAKC,SAAS,CAAC8P,WAAW,SAKtCpB,gBAAkB,SAAC7M,GACf9B,EAAKC,SAAS,CAAC8P,WAAW,IAC1B,IAAMnK,EAAc,CAChBZ,MAAK,meAeLa,UAAW,CACPsK,OAAQrO,IAIhBgD,IAAMC,KAAK,WAAYV,KAAKC,UAAUsB,GAAc,CAACX,QAAS,CAC1DC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SACxC+D,KAAK,SAAAC,GACD,IAOIkL,EAPAF,EAAY3J,OAAAC,EAAA,EAAAD,CAAOzG,EAAKF,MAAMmP,OAC5BoB,EAAoBD,EAAazJ,UAAU,SAAAzC,GAC7C,OAAOA,EAAEf,MAAQrB,IAEf0O,EAAeJ,EAAanM,KAAK,SAAAC,GACnC,OAAOA,EAAEf,MAAQrB,IAGjBsO,EAAaC,GAAmBzB,SAAW,GAC3CwB,EAAaC,GAAmBzB,UAAY,EAC5C0B,EAAWtQ,EAAKF,MAAMkP,WAAa5J,EAAQC,KAAKA,KAAKoL,oBAAoB5J,SAASxE,QAElF+N,EAAaM,OAAO5O,EAAI,GACxBwO,EAAWtQ,EAAKF,MAAMkP,WAAawB,EAAa3J,SAASxE,MACrD+N,EAAa9K,QAAU,GACvBtF,EAAKC,SAAS,CAAC6P,eAAe,KAGtC9P,EAAKC,SAAS,CAACgP,MAAOmB,EAAcpB,WAAYsB,EAAUP,WAAW,MAExExK,MAAM,SAAAC,GACHxF,EAAKC,SAAS,CAAC8P,WAAW,SAItCY,YAAc,WACV3Q,EAAKC,SAAS,CAAC8P,WAAW,IAU1BjL,IAAMC,KAAK,WATS,CAChBC,MAAK,sJAQ2B,CAACC,QAAS,CAC1CC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SAE3C+D,KAAK,SAAAC,GACFpF,EAAKC,SAAS,CAAC+O,WAAY,EAAGc,eAAe,EAAMC,WAAW,SAItEjB,WAAa,SAAChN,GACV9B,EAAKC,SAAS,CAAC8P,WAAW,IAC1B,IAAMnK,EAAc,CAChBZ,MAAK,wMAOLa,UAAW,CACPsK,OAAQrO,IAGhBgD,IAAMC,KAAK,WAAYa,EAAa,CAACX,QAAS,CAC1CC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SAE3C+D,KAAK,SAAAC,GACFpF,EAAKiQ,eACLjQ,EAAKC,SAAS,CAAC+O,WAAY,EAAGe,WAAW,MAE5CxK,MAAM,SAAAC,GACHxF,EAAKC,SAAS,CAAC8P,WAAW,SAIlCH,QAAU,WACN5P,EAAKC,SAAS,CAACiC,YAAY,IAmB3B4C,IAAMC,KAAK,WAlBS,CAChBC,MAAK,yVAiB2B,CAACC,QAAS,CAC1CC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SAE3C+D,KAAK,SAAAC,GACFK,QAAQC,IAAIN,GACZpF,EAAKjB,MAAMwF,QAAQC,KAAK,aAE3Be,MAAM,SAAAC,SAKXoL,cAAgB,WACZ5Q,EAAKC,SAAS,CAAC+P,aAAa,wFA3O5B1P,KAAK2P,8DAIL3P,KAAKqD,UAAW,mCA2OhB,OACI3E,EAAAC,EAAAC,cAAA,WACKoB,KAAKR,MAAMiQ,UAEX/Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAC2D,EAAD,OAGJvC,KAAKR,MAAMgQ,cAER9Q,EAAAC,EAAAC,cAAA,MAAIkB,MAAO,CAACyQ,UAAW,SAAUC,WAAY,SAA7C,yBAED9R,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACAzB,EAAAC,EAAAC,cAAA,MAAIkB,MAAO,CAACyQ,UAAW,SAAUC,WAAY,OAAQC,cAAe,SAApE,QAAkF/R,EAAAC,EAAAC,cAAA,QAAMkB,MAAO,CAACY,MAAO,YAArB,SAClFhC,EAAAC,EAAAC,cAAC8R,GAAD,CAAO/B,MAAO3O,KAAKR,MAAMmP,MAClBG,gBAAiB9O,KAAKuO,gBACtBQ,gBAAiB/O,KAAKqO,gBACtBe,cAAepP,KAAKR,MAAMkP,WAC1BS,UAAWnP,KAAKqQ,YAChBrB,aAAchP,KAAKwO,WACnBc,QAAStP,KAAKsP,mBAhRZ1O,aAgSbC,eARS,SAAArB,GACpB,MAAO,CACH6B,OAAQ7B,EAAM6B,OACdP,MAAOtB,EAAMsB,MACbP,UAAWf,EAAMe,YAIVM,CAAyB0O,ICnRzBoB,kBAhBD,SAAAlS,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ0C,IAAK9C,EAAM+C,IAC9B9C,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,YAAOH,EAAM+C,KACxB/C,EAAMmS,aAAalO,IAAI,SAAAiO,GACpB,OACIjS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe0C,IAAKoP,EAAMhO,OAAOE,KAC5CnE,EAAAC,EAAAC,cAAA,SAAI+R,EAAMhO,OAAOb,MAAjB,KAAyBpD,EAAAC,EAAAC,cAAA,YAAO+R,EAAMrC,UAAtC,QAIZ5P,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,YAAOH,EAAMmP,UCA9BiD,GAXA,SAAApS,GACX,OAAOA,EAAMoS,OAAOnO,IAAI,SAAAiO,GACpB,OACIjS,EAAAC,EAAAC,cAACkS,GAAD,CAAOtP,GAAImP,EAAM9N,IACVtB,IAAKoP,EAAM9N,IACX+N,aAAcD,EAAMA,MACpB/C,KAAM+C,EAAMxC,eCFzB4C,8MAEFvR,MAAQ,CACJqR,OAAQ,GACRpB,WAAW,EACXuB,UAAU,KAOdC,cAAgB,WACZvR,EAAKC,SAAS,CAAC8P,WAAW,IAC1B,IAAMnK,EAAc,CAChBZ,MAAK,ukBAmBLa,UAAW,CACPlE,OAAQwC,aAAa8E,QAAQ,YAIrCnE,IAAMC,KAAK,WAAYa,EAAa,CAACX,QAAS,CAC1CC,eAAgB,mBAChBc,cAAiB,UAAYhG,EAAKjB,MAAMqC,SAE3C+D,KAAK,SAAAC,GACEA,EAAQC,KAAKA,KAAK8L,OAAO7L,QAAU,EACnCtF,EAAKC,SAAS,CAACqR,UAAU,EAAMvB,WAAW,IAE1C/P,EAAKC,SAAS,CAACkR,OAAQ/L,EAAQC,KAAKA,KAAK8L,OAAQpB,WAAW,EAAOuB,UAAU,MAGpF/L,MAAM,SAAAC,GACHxF,EAAKC,SAAS,CAAC8P,WAAW,0FA1C9BzP,KAAKiR,iDA+CL,IAAIC,EAUJ,OARIA,EADAlR,KAAKR,MAAMiQ,UACC/Q,EAAAC,EAAAC,cAAC2D,EAAD,MAERvC,KAAKR,MAAMwR,SACCtS,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAACuS,GAAD,CAAQN,OAAQ7Q,KAAKR,MAAMqR,SAI3CnS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,uBACRsS,UArEatQ,aAkFfC,eAPS,SAAArB,GACpB,MAAO,CACHsB,MAAOtB,EAAMsB,MACbO,OAAQ7B,EAAM6B,SAIPR,CAAyBkQ,IClCzBK,GApDM,SAACC,EAAkB7M,GACpC,gBAAA8M,GAAA,SAAAC,IAAA,IAAAC,EAAA9R,EAAAyG,OAAAsL,EAAA,EAAAtL,CAAAnG,KAAAuR,GAAA,QAAAG,EAAAC,UAAA3M,OAAA4M,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAApS,EAAAyG,OAAA4L,EAAA,EAAA5L,CAAAnG,MAAAwR,EAAArL,OAAA6L,EAAA,EAAA7L,CAAAoL,IAAAU,KAAAC,MAAAV,EAAA,CAAAxR,MAAAiG,OAAA2L,MACIpS,MAAQ,CACJsI,MAAO,MAFfpI,EAuBI2F,cAAgB,WACZ3F,EAAKC,SAAS,CAACmI,MAAO,QAxB9BpI,EAAA,OAAAyG,OAAAgM,EAAA,EAAAhM,CAAAoL,EAAAD,GAAAnL,OAAAiM,EAAA,EAAAjM,CAAAoL,EAAA,EAAAhQ,IAAA,qBAAA8F,MAAA,WAKyB,IAAAzB,EAAA5F,KACjBA,KAAKqS,gBAAkB7N,EAAM8N,aAAaC,QAAQC,IAAI,SAAAC,GAElD,OADA7M,EAAKjG,SAAS,CAACmI,MAAO,OACf2K,IAGXzS,KAAK0S,gBAAkBlO,EAAM8N,aAAaK,SAASH,IAAI,SAAA7M,GACnD,OAAOA,GACR,SAAAmC,GACClC,EAAKjG,SAAS,CAACmI,MAAOA,QAdlC,CAAAvG,IAAA,uBAAA8F,MAAA,WAmBQ7C,EAAM8N,aAAaC,QAAQK,MAAM5S,KAAKqS,iBACtC7N,EAAM8N,aAAaK,SAASC,MAAM5S,KAAK0S,mBApB/C,CAAAnR,IAAA,SAAA8F,MAAA,WA2BQ,OACI3I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwB,SAAA,KACIzB,EAAAC,EAAAC,cAAC+B,EAAD,CAAUrB,KAAMU,KAAKR,MAAMsI,MAAO5I,MAAOc,KAAKqF,eAC1C3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACRmB,KAAKR,MAAMsI,OAER9H,KAAKR,MAAMsI,MAAM6K,SAEjB3S,KAAKR,MAAMsI,MAAM6K,SAAS5N,KAAK8N,OAAO,GAAGC,QAI7C,QAIZpU,EAAAC,EAAAC,cAACyS,EAAqBrR,KAAKvB,YA5C3C8S,EAAA,CAAqB3Q,cCanBmS,+LAEF/S,KAAKvB,MAAMuU,6CAGX,OACEtU,EAAAC,EAAAC,cAACqU,EAAD,KACEvU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,KACIxL,KAAKvB,MAAMyU,gBAA0E,KAAxDxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,gBAAgBhU,OAAK,EAACiU,UAAWvK,IAC1E7I,KAAKvB,MAAMyU,gBAAsE,KAApDxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,UAAUhU,OAAK,EAACiU,UAAWnI,IACrEjL,KAAKvB,MAAMyU,gBAAkBxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,UAAUhU,OAAK,EAACiU,UAAW9H,IAAa,KACjFtL,KAAKvB,MAAMyU,gBAAkBxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,OAAOhU,OAAK,EAACiU,UAAW3H,IAAoB,KACrFzL,KAAKvB,MAAMyU,gBAAkBxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,QAAQhU,OAAK,EAACiU,UAAW7D,KAAoB,KACtFvP,KAAKvB,MAAMyU,gBAAkBxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,YAAYhU,OAAK,EAACiU,UAAW3H,IAAoB,KAC1FzL,KAAKvB,MAAMyU,gBAAkBxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,UAAUhU,OAAK,EAACiU,UAAWrC,KAAsB,KAC1F/Q,KAAKvB,MAAMyU,gBAAkBxU,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,cAAchU,OAAK,EAACiU,UAAWnF,IAA4B,KACrGvP,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAO2H,KAAK,IAAIhU,OAAK,EAACiU,UAAWhQ,IACjC1E,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAUzM,GAAG,eAjBL6B,aAoCHyS,MAAa/R,YAAWT,YAZf,SAAArB,GACtB,MAAO,CACL0T,gBAAiC,OAAhB1T,EAAMsB,QAIA,SAAAkH,GACzB,MAAO,CACLgL,UAAW,kBAAMhL,EAASgD,QAISnK,CAA6CkS,KAAOvO,cCnDrF8O,GAAe,CACjBxS,MAAO,KACPO,OAAQ,KACRd,UAAW,MA0BAgT,GAvBK,WAAkC,IAAjC/T,EAAiCmS,UAAA3M,OAAA,QAAAwO,IAAA7B,UAAA,GAAAA,UAAA,GAAzB2B,GAAcG,EAAW9B,UAAA3M,OAAA,EAAA2M,UAAA,QAAA6B,EAClD,OAAOC,EAAOtS,MACV,IfVa,QeWT,OAAOgF,OAAA0D,EAAA,EAAA1D,CAAA,GACA3G,EADP,CAEIsB,MAAO2S,EAAO3S,MACdO,OAAQoS,EAAOpS,OACfd,UAAWkT,EAAOlT,UAClBuH,MAAO,OAEf,IfjBc,SekBV,OAAO3B,OAAA0D,EAAA,EAAA1D,CAAA,GACA3G,EADP,CAEIsB,MAAO,KACPO,OAAQ,KACRd,UAAW,KACXuH,MAAO,OAEf,QACI,OAAOtI,aCRbkU,GAAmBC,OAAOC,sCAAwCC,KAE5DC,GAAQC,aAAYC,GAAaN,GACrCO,aAZO,SAAAH,GACX,OAAO,SAAAI,GACH,OAAO,SAAAT,GAEH,OADeS,EAAKT,MASAU,QAG1BC,GACF1V,EAAAC,EAAAC,cAACyV,EAAA,EAAD,CAAUP,MAAOA,IACbpV,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAC0V,GAAD,QAKZC,IAASC,OAAOJ,GAAKK,SAASC,eAAe,6BCjC7CC,EAAAC,QAAiBC,EAAAjR,EAAuB,qDCAxC+Q,EAAAC,QAAiBC,EAAAjR,EAAuB","file":"static/js/main.8a9fef9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavigationItem.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem = props => {\r\n    return (\r\n        <li className=\"nav-li\">\r\n            <NavLink to={props.link} onClick={props.close} exact>{props.children}</NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => {\r\n    if (props.show) {\r\n        return (\r\n            <div className=\"backdrop\" onClick={props.close}>{props.children}</div>\r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default backdrop;","import React, {Component} from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from '../../components/NavigationItem/NavigationItem';\r\nimport MobileLogo from '../../images/logo.svg';\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\r\nimport {connect} from 'react-redux';\r\n\r\nclass NavigationItems extends Component {\r\n    state = {\r\n        sideDrawerClose: true\r\n    }\r\n\r\n    sideDrawerClose = () => {\r\n        this.setState({sideDrawerClose: true});\r\n    }\r\n\r\n    sideDrawerOpen = () => {\r\n        this.setState({sideDrawerClose: false});\r\n    }\r\n\r\n    render() {\r\n        let style = {\r\n            transform: 'translateX(0)'\r\n        }\r\n        if (this.state.sideDrawerClose) {\r\n            style = {\r\n                transform: 'translateX(-105%)'\r\n            }\r\n        } else {\r\n            style = {\r\n                transform: 'translateX(0)'\r\n            }\r\n        }\r\n\r\n        let navigationLists;\r\n\r\n        if (this.props.isAuthorized) {\r\n            navigationLists = (\r\n                <ul>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/\">Mobiles</NavigationItem>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/new\">Create</NavigationItem>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/cart\">My Cart</NavigationItem>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/orders\">My Orders</NavigationItem>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/logout\">Log Out</NavigationItem>\r\n                </ul>\r\n            )\r\n        } else {\r\n            navigationLists = (\r\n                <ul>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/\">Mobiles</NavigationItem>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/authenticate\">Sign Up</NavigationItem>\r\n                    <NavigationItem close={this.sideDrawerClose} link=\"/signin\">Sign In</NavigationItem>\r\n                </ul>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n            <nav className=\"big-screen\">\r\n                <div className=\"logo\">\r\n                    <img src={MobileLogo} alt=\"mobile\" />\r\n                    {this.props.firstname\r\n                    ?\r\n                    <p style={{display: 'inline-block', marginLeft: '10px', color: 'white'}}>\r\n                    Welcome {this.props.firstname}\r\n                    </p>\r\n                    :\r\n                    null\r\n                    }\r\n                </div>\r\n                <div className=\"navitems\">\r\n                    {navigationLists}\r\n                </div>\r\n            </nav>\r\n            <nav className=\"small-screen\">\r\n                <div className=\"nav-sidedrawer\">\r\n                    <div className=\"toggleButton\" onClick={this.sideDrawerOpen}>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"sidedrawer\" style={style}>\r\n                        <div className=\"sidedrawer-close\" onClick={this.sideDrawerClose}>\r\n                            <p>Close</p>\r\n                        </div>\r\n                        <div className=\"sidedrawer-nav\">\r\n                            {navigationLists}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"logo\">\r\n                    <img src={MobileLogo} alt=\"mobile\" />\r\n                </div>\r\n            </nav>\r\n            <Backdrop close={this.sideDrawerClose} show={!this.state.sideDrawerClose} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        firstname: state.firstname,\r\n        isAuthorized: state.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavigationItems);","import React from 'react';\r\nimport './Layout.css';\r\nimport NavigationItems from '../../containers/NavigationItems/NavigationItems';\r\n\r\nconst layout = props => {\r\n    return (\r\n        <div className=\"layout\">\r\n            <NavigationItems />\r\n            <main className=\"main\">\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default layout;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = props => {\r\n    return (\r\n        <button onClick={props.clicked} \r\n                type={props.type} \r\n                disabled={props.disabled} \r\n                className=\"buttonn\">\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport './Mobile.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mobile = props => {\r\n    return (\r\n        <div className=\"mobile-card\" key={props.id}>\r\n            {props.isAuthorized && props.userId !== props.mobileUserID\r\n             ?\r\n             <div className=\"AddToCart\">\r\n                <Button clicked={props.addToCart} disabled={props.onDisabled}>Add To Cart</Button>\r\n             </div>\r\n             :\r\n             null\r\n             }\r\n            <div className=\"mobile-image\">\r\n                <img src={props.image} alt=\"mobileImage\" />\r\n            </div>\r\n            <div className=\"mobile-type-price\">\r\n                <div className=\"mobile-type\">\r\n                    <p>{props.title}</p>\r\n                </div>\r\n                <div className=\"mobile-price\">\r\n                    <p>${props.price}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"createdby\">\r\n                <p>Created By: <span style={{fontWeight: 'bolder'}}>{props.firstname} {props.lastname}</span></p>\r\n            </div>\r\n            {props.isAuthorized \r\n             ?\r\n             <div className=\"buttons\">\r\n             {props.userId === props.mobileUserID\r\n             ?\r\n             <>\r\n             <Button clicked={props.editClicked}>Edit</Button>\r\n             <Button clicked={props.detailClicked}>Details</Button>\r\n             </>\r\n             :\r\n             <Button clicked={props.detailClicked}>Details</Button>}\r\n            </div>\r\n            :\r\n             null}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthorized: state.token !== null,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(mobile));","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst spinner = props => {\r\n    return (\r\n        <div className=\"Loader\"></div>\r\n    )\r\n};\r\n\r\nexport default spinner;","import React from 'react';\r\nimport './Mobiles.css';\r\nimport Mobile from './Mobile/Mobile';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nconst allMobiles = props => {\r\n    let mobileList = <Spinner />;\r\n    if (props.mobilesExist) {\r\n        mobileList = props.mobiles.map(mobile => {\r\n            return <Mobile key={mobile._id} \r\n                           id={mobile._id}\r\n                           title={mobile.title}\r\n                           price={mobile.price}\r\n                           firstname={mobile.userId.firstname}\r\n                           lastname={mobile.userId.lastname}\r\n                           editClicked={props.clickedEdit.bind(this, mobile._id)}\r\n                           mobileUserID={mobile.userId._id}\r\n                           detailClicked={props.goToDetail.bind(this, mobile._id)}\r\n                           image={mobile.imageUrl}\r\n                           addToCart={props.addCart.bind(this, mobile)}\r\n                           onDisabled={props.buttonDisabled} />;\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {mobileList}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default allMobiles;","import React, { Component } from 'react';\r\nimport './Mobiles.css';\r\nimport AllMobiles from '../../components/Mobiles/Mobiles';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport openSocket from 'socket.io-client';\r\n\r\nclass Mobiles extends Component {\r\n    isActive = true\r\n    state = {\r\n        mobiles: [],\r\n        noMobiles: false,\r\n        cartAdded: false,\r\n        cartAddedItem: null,\r\n        buttonDisabled: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchMobiles();\r\n        const socket = openSocket('/');\r\n        socket.on('newMobile', data => {\r\n            this.setState(prevState => {\r\n                return {\r\n                    mobiles: prevState.mobiles.concat(data.mobile)\r\n                };\r\n            });\r\n        });\r\n        socket.on('editedMobile', (data) => {\r\n            const mobileState = [...this.state.mobiles];\r\n            const filteredMobileIndex = this.state.mobiles.findIndex(mobile => {\r\n                return mobile._id === data.mobile._id;\r\n            });\r\n            mobileState[filteredMobileIndex] = data.mobile\r\n            this.setState({mobiles: mobileState});\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.isActive = false;\r\n    }\r\n\r\n    onGoToEdit = (id) => {\r\n        const filteredMobile = this.state.mobiles.find(p => {\r\n            return p._id === id;\r\n        });\r\n        localStorage.setItem('filteredMobile', JSON.stringify(filteredMobile));\r\n        this.props.history.push({\r\n            pathname: '/edit/' + id,\r\n            search: '?edit=true',\r\n            state: {filteredMobile: filteredMobile}\r\n        });\r\n    };\r\n\r\n    onGoToDetail = (id) => {\r\n        const filteredMobile = this.state.mobiles.find(p => {\r\n            return p._id === id;\r\n        });\r\n        localStorage.setItem('filteredMobile', JSON.stringify(filteredMobile));\r\n        this.props.history.push({\r\n            pathname: '/mobile/' + id,\r\n        });\r\n    };\r\n\r\n    onGoToCart = () => {\r\n        this.props.history.push('/cart');\r\n    }\r\n\r\n    onFetchMobiles = () => {\r\n        const requestBody = {\r\n            query: `\r\n            query {\r\n                mobiles {\r\n                  _id\r\n                  title\r\n                  description\r\n                  price\r\n                  model\r\n                  imageUrl\r\n                  createdAt\r\n                  userId {\r\n                    _id\r\n                    firstname\r\n                    lastname\r\n                    email\r\n                  }\r\n                }\r\n              }\r\n            `\r\n        };\r\n        axios.post('/graphql', JSON.stringify(requestBody), {headers: {\r\n            'Content-Type': 'application/json',\r\n        }}).then(resData => {\r\n                if (this.isActive) {\r\n                    const mobiles = resData.data.data.mobiles;\r\n                    if (mobiles.length <= 0) {\r\n                        this.setState({noMobiles: true});\r\n                    } else {\r\n                        this.setState({mobiles: mobiles, noMobiles: false});\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    closeBackdrop = () => {\r\n        this.setState({cartAdded: false});\r\n    }\r\n\r\n    addToCart = (mobile) => {\r\n        this.setState({buttonDisabled: true});\r\n        const requestBody = {\r\n            query: `\r\n                mutation AddToCart($mobile: AddedMobileToCartInput!) {\r\n                    addToCart(mobile: $mobile) {\r\n                        mobileId {\r\n                        _id\r\n                        title\r\n                        price\r\n                        createdAt\r\n                        updatedAt\r\n                        imageUrl\r\n                        }\r\n                        quantity\r\n                        userId {\r\n                        _id\r\n                        email\r\n                        firstname\r\n                        lastname\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                mobile: {\r\n                    _id: mobile._id,\r\n                    title: mobile.title,\r\n                    description: mobile.description,\r\n                    model: mobile.model,\r\n                    price: mobile.price,\r\n                    imageUrl: mobile.imageUrl\r\n                }\r\n            }\r\n        };\r\n\r\n        axios.post('/graphql', requestBody, {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }})\r\n        .then(res => {\r\n            this.setState({cartAdded: true, cartAddedItem: res.data.data.addToCart, buttonDisabled: false});\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <h1 className=\"mobiles-title\">Our <span>Mobiles</span></h1>\r\n            <div className=\"mobiles\">\r\n                {this.state.noMobiles ? <p className=\"Nomobiles\">No Mobiles Here Yet!!</p> : \r\n                            <AllMobiles mobiles={this.state.mobiles} \r\n                                        mobilesExist={this.state.mobiles.length > 0}\r\n                                        clickedEdit={this.onGoToEdit}\r\n                                        goToDetail={this.onGoToDetail}\r\n                                        addCart={this.addToCart}\r\n                                        buttonDisabled={this.state.buttonDisabled}/>\r\n                }\r\n            </div>\r\n            {this.state.cartAdded\r\n             ?\r\n             <Backdrop show close={this.closeBackdrop}>\r\n             <div className=\"item-added-parent\">\r\n                 <h3>Item added To Cart</h3>\r\n                 <div className=\"item-added-image\">\r\n                     <img src={this.state.cartAddedItem.mobileId.imageUrl} alt=\"cart-mobile\"/>\r\n                 </div>\r\n                 <p>{this.state.cartAddedItem.mobileId.title}</p>\r\n                 <p>Price: <span>${this.state.cartAddedItem.mobileId.price}</span></p>\r\n                 <div style={{marginTop: '7px'}}>\r\n                     <Button clicked={this.closeBackdrop}>Continue Shopping</Button>\r\n                 </div>\r\n                 <div style={{marginTop: '5px'}}>\r\n                     <Button clicked={this.onGoToCart}>Go To Cart</Button>\r\n                 </div>\r\n             </div>\r\n            </Backdrop>\r\n            :\r\n            null\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Mobiles);","import React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = props => {\r\n    let inputType;\r\n    let classes = ['inputtype'];\r\n    let inputparentshow = ['form-control'];\r\n    let errorMessages = <p></p>;\r\n    if (props.showinput) {\r\n        inputparentshow.push('displaynone');\r\n    }\r\n    if (props.touched) {\r\n        if (props.invalid) {\r\n            classes.push('invalid');\r\n            if (props.elementConfig.name === 'email') {\r\n                errorMessages = <p className=\"errormessage\">Email is Invalid</p>\r\n            }\r\n            if (props.elementConfig.name === 'firstname') {\r\n                errorMessages = <p className=\"errormessage\">This field is required</p>\r\n            }\r\n            if (props.elementConfig.name === 'lastname') {\r\n                errorMessages = <p className=\"errormessage\">This field is required</p>\r\n            }\r\n            if (props.elementConfig.name === 'password') {\r\n                errorMessages = <p className=\"errormessage\">password should be at least 6 characters</p>\r\n            }\r\n            if (props.elementConfig.name === 'confirmpassword') {\r\n                errorMessages = <p className=\"errormessage\">must match password field</p>\r\n            }\r\n        } else {\r\n            classes.push('valid');\r\n        }\r\n    }\r\n    switch(props.elementType) {\r\n        case 'input':\r\n            inputType = <input\r\n                            {...props.elementConfig} \r\n                            value={props.value} \r\n                            onChange={props.changed}\r\n                            className={classes.join(' ')} />;\r\n            break;\r\n        case 'textarea':\r\n            inputType = <textarea \r\n                            {...props.elementConfig} \r\n                            value={props.value}\r\n                            onChange={props.changed}></textarea>;\r\n            break;\r\n        case 'select':\r\n            inputType = \r\n            <select value={props.value} onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => {\r\n                    return (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n            break;\r\n        default:\r\n            inputType = <input \r\n                                {...props.elementConfig}\r\n                                value={props.value}\r\n                                onChange={props.changed}\r\n                                className={classes.join(' ')} />;\r\n    }\r\n    return (\r\n        <div className={inputparentshow.join(' ')}>\r\n            <label>{props.label}</label>\r\n            {inputType}\r\n            {errorMessages}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input;","import * as ActionTypes from './ActionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authSuccess = (token, userId, firstname) => {\r\n    return {\r\n        type: ActionTypes.LOGIN,\r\n        token: token,\r\n        userId: userId,\r\n        firstname: firstname,\r\n        error: null\r\n    };\r\n};\r\n\r\nexport const googleAuth = (data) => {\r\n    return dispatch => {\r\n        return axios.post('/oauth/google', {\r\n            access_token: data.accessToken\r\n        }).then(res => {\r\n            dispatch(login(res.data.token, res.data.userId, res.data.firstname));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    };\r\n};\r\n\r\nexport const login = (token, userId, firstname) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('userId', userId);\r\n    localStorage.setItem('firstname', firstname);\r\n    localStorage.setItem('expDate', new Date().getTime() + (1 * 60 * 60 * 1000));\r\n    return dispatch => {\r\n        dispatch(authSuccess(token, userId, firstname));\r\n        dispatch(signoutafterOneHour());\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('firstname');\r\n    localStorage.removeItem('expDate');\r\n    return {\r\n        type: ActionTypes.LOGOUT\r\n    };\r\n};\r\n\r\nexport const signoutafterOneHour = () => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, 3600 * 1000);\r\n    };\r\n};\r\n\r\nexport const checkAuthState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        const expDate = new Date(localStorage.getItem('expDate'));\r\n        const userId = localStorage.getItem('userId');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            if (new Date() > expDate) {\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(authSuccess(token, userId, localStorage.getItem('firstname')));\r\n                dispatch(signoutafterOneHour());\r\n            }\r\n        }\r\n    };\r\n};","export const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';","import React, { Component } from 'react';\r\nimport './Auth.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport axios from 'axios';\r\nimport Input from '../../components/Input/Input';\r\n// import GoogleLogin from 'react-google-login';\r\nimport {connect} from 'react-redux';\r\nimport * as ActionCreators from '../../store/Actions/auth';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        authForm: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'email',\r\n                    type: 'email'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n                errorMessage: '',\r\n                show: true,\r\n            },\r\n            firstname: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'firstname',\r\n                    type: 'text'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n                errorMessage: '',\r\n                show: true,\r\n            },\r\n            lastname: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'lastname',\r\n                    type: 'text'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n                errorMessage: '',\r\n                show: true,\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'password',\r\n                    type: 'password'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    minLength: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n                errorMessage: '',\r\n                show: true,\r\n            },\r\n            confirmpassword: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'confirmpassword',\r\n                    type: 'password'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    withPassword: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n                errorMessage: '',\r\n                show: true,\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    changeInputHandler = (event, inputIdentifier) => {\r\n        const authForm = {...this.state.authForm};\r\n        const stateElement = {...authForm[inputIdentifier]};\r\n        stateElement.value = event.target.value;\r\n        stateElement.touched = true;\r\n        stateElement.valid = this.checkValidity(stateElement.value, stateElement.validationRules);\r\n        authForm[inputIdentifier] = stateElement;\r\n\r\n        let formValid = true;\r\n        for (let key in authForm) {\r\n            formValid = authForm[key].valid && formValid\r\n        }\r\n        this.setState({authForm: authForm, formIsValid: formValid});\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = re.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= 6 && isValid;\r\n        }\r\n\r\n        if (rules.withPassword) {\r\n            isValid = value === this.state.authForm.password.value && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        let requestBody;\r\n        const email = this.state.authForm.email.value;\r\n        const password = this.state.authForm.password.value;\r\n        const firstname = this.state.authForm.firstname.value;\r\n        const lastname = this.state.authForm.lastname.value;\r\n        const confirmPassword = this.state.authForm.confirmpassword.value;\r\n\r\n            requestBody = {\r\n                query: `\r\n                    mutation CreateUser($email: String!, $password: String!, $confirmPassword: String!, $firstname: String!, $lastname: String!) {\r\n                        createUser(userInput: {\r\n                            email: $email,\r\n                            password: $password,\r\n                            confirmPassword: $confirmPassword,\r\n                            firstname: $firstname,\r\n                            lastname: $lastname\r\n                        }) {\r\n                            _id\r\n                            email\r\n                            firstname\r\n                            lastname\r\n                        }\r\n                    }\r\n                `,\r\n                variables: {\r\n                    email: email,\r\n                    password: password,\r\n                    confirmPassword: confirmPassword,\r\n                    firstname: firstname,\r\n                    lastname: lastname\r\n                }\r\n            };\r\n\r\n        axios.post('/graphql', JSON.stringify(requestBody), {headers: {\r\n            'Content-Type': 'application/json'\r\n        }}).then(resData => {\r\n                this.props.history.push('/signin');\r\n            })\r\n            .catch(err => {\r\n            });\r\n    };\r\n\r\n    // successGoogle = res => {\r\n    //     this.props.onAuthGoogle(res)\r\n    // }\r\n\r\n    render() {\r\n        let formElementsArray = [];\r\n        for (let key in this.state.authForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.authForm[key]\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"formParent\">\r\n                <h1>SIGN UP Form</h1>\r\n                <form className=\"login-form\" onSubmit={this.onSubmitForm}>\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                                <Input key={formElement.id}\r\n                                       elementType={formElement.config.elementType}\r\n                                       elementConfig={formElement.config.elementConfig}\r\n                                       value={formElement.config.value}\r\n                                       label={formElement.id.toUpperCase()}\r\n                                       changed={(event) => this.changeInputHandler(event, formElement.id)}\r\n                                       invalid={!formElement.config.valid}\r\n                                       touched={formElement.config.touched}\r\n                                       error={formElement.config.errorMessage}\r\n                                       showinput={!formElement.config.show} />\r\n                        )\r\n                    })}\r\n                    <div className=\"submit-button\">\r\n                        <Button type=\"submit\"\r\n                                disabled={!this.state.formIsValid}>SIGN UP!</Button>\r\n                  \r\n                    </div>\r\n                    {/* <div>\r\n                        <GoogleLogin\r\n                         clientId='486512755387-s1u795hkh8liqv7v3ar15ghop1b5gjq2.apps.googleusercontent.com'\r\n                         buttonText=\"Google\"\r\n                         onSuccess={this.successGoogle}\r\n                         onFailure={this.successGoogle} />\r\n                    </div> */}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuthGoogle: (data) => dispatch(ActionCreators.googleAuth(data))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from 'axios';\r\nimport Input from '../../../components/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport * as ActionCreators from '../../../store/Actions/auth';\r\n// import GoogleLogin from 'react-google-login';\r\n\r\nclass Signin extends Component {\r\n    state = {\r\n        authForm: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'email',\r\n                    type: 'email'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'password',\r\n                    type: 'password'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    minLength: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            confirmpassword: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'confirmpassword',\r\n                    type: 'password'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    withPassword: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    changeAuthHandler = () => {\r\n            this.setState(prevState => {\r\n                return {\r\n                    isLogIn: !prevState.isLogIn\r\n                }\r\n            })\r\n    }\r\n\r\n    changeInputHandler = (event, inputIdentifier) => {\r\n        const authForm = {...this.state.authForm};\r\n        const stateElement = {...authForm[inputIdentifier]};\r\n        stateElement.value = event.target.value;\r\n        stateElement.touched = true;\r\n        stateElement.valid = this.checkValidity(stateElement.value, stateElement.validationRules);\r\n        authForm[inputIdentifier] = stateElement;\r\n\r\n        let formValid = true;\r\n        for (let key in authForm) {\r\n            formValid = authForm[key].valid && formValid\r\n        }\r\n        this.setState({authForm: authForm, formIsValid: formValid});\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = re.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= 6 && isValid;\r\n        }\r\n\r\n        if (rules.withPassword) {\r\n            isValid = value === this.state.authForm.password.value && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        let requestBody;\r\n        const email = this.state.authForm.email.value;\r\n        const password = this.state.authForm.password.value;\r\n\r\n        requestBody = {\r\n            query: `\r\n                query LoginUser($email: String!, $password: String!) {\r\n                    loginUser(email: $email, password: $password) {\r\n                        token\r\n                        tokenExpiration\r\n                        userId\r\n                        firstname\r\n                      }\r\n                }\r\n            `,\r\n            variables: {\r\n                email: email,\r\n                password: password\r\n            }\r\n        };\r\n\r\n        axios.post('/graphql', JSON.stringify(requestBody), {headers: {\r\n            'Content-Type': 'application/json'\r\n        }}).then(resData => {\r\n                this.props.onLogIn(resData.data.data.loginUser.token, resData.data.data.loginUser.userId, resData.data.data.loginUser.firstname);\r\n                this.props.checkAuthState();\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n            });\r\n    };\r\n\r\n    // successGoogle = res => {\r\n    //     this.props.onAuthGoogle(res);\r\n    // }\r\n\r\n    render() {\r\n        let formElementsArray = [];\r\n        for (let key in this.state.authForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.authForm[key]\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"formParent\">\r\n                <h1>SIGN IN Form</h1>\r\n                <form className=\"login-form\" onSubmit={this.onSubmitForm}>\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                                <Input key={formElement.id}\r\n                                       elementType={formElement.config.elementType}\r\n                                       elementConfig={formElement.config.elementConfig}\r\n                                       value={formElement.config.value}\r\n                                       label={formElement.id.toUpperCase()}\r\n                                       changed={(event) => this.changeInputHandler(event, formElement.id)}\r\n                                       invalid={!formElement.config.valid}\r\n                                       touched={formElement.config.touched} />\r\n                        )\r\n                    })}\r\n                    <div className=\"submit-button\">\r\n                        <Button type=\"submit\"\r\n                                disabled={!this.state.formIsValid}>SIGN IN!</Button>                 \r\n                    </div>\r\n                    {/* <div>\r\n                        <GoogleLogin\r\n                         clientId='486512755387-s1u795hkh8liqv7v3ar15ghop1b5gjq2.apps.googleusercontent.com'\r\n                         buttonText=\"Google\"\r\n                         onSuccess={this.successGoogle}\r\n                         onFailure={this.successGoogle} />\r\n                    </div> */}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogIn: (token, userId, firstname) => dispatch(ActionCreators.login(token, userId, firstname)),\r\n        checkAuthState: () => dispatch(ActionCreators.checkAuthState()),\r\n        onAuthGoogle: (data) => dispatch(ActionCreators.googleAuth(data))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signin);\r\n","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as ActionCreators from '../../../store/Actions/auth';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Redirect to=\"/\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(ActionCreators.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\n\r\nimport Input from '../../components/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport queryString from 'querystring';\r\n\r\nclass CreateMobiles extends Component {\r\n\r\n    state = {\r\n        createMobileForm: {\r\n            Title: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'title',\r\n                    type: 'text'\r\n                },\r\n                validationRules: {\r\n                    required: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            Description: {\r\n                elementType: 'textarea',\r\n                elementConfig: {\r\n                    name: 'description',\r\n                    type: 'text'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    maxLength: true\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            Price: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    name: 'price',\r\n                    type: 'number'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                },\r\n                value: '',\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            Model: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'samsung', displayValue: 'Samsung'},\r\n                        {value: 'iphone', displayValue: 'Iphone'},\r\n                        {value: 'oppo', displayValue: 'Oppo'},\r\n                        {value: 'vivo', displayValue: 'Vivo'},\r\n                        {value: 'nokia', displayValue: 'Nokia'},\r\n                        {value: 'lenovo', displayValue: 'Lenovo'},\r\n                        {value: 'sony', displayValue: 'Sony'},\r\n                    ]\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                    minLength: true\r\n                },\r\n                value: 'samsung',\r\n                valid: true,\r\n                touched: false\r\n            },\r\n            mobile_Picture: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'file',\r\n                    name: 'pic',\r\n                    accept: '.png, .jpg, .jpeg'\r\n                },\r\n                validationRules: {\r\n                    required: true,\r\n                },\r\n                value: '',\r\n                imageValue: '',\r\n                valid: false,\r\n                touched: false\r\n            },\r\n        },\r\n        formIsValid: false,\r\n        mode: 'create',\r\n        filteredMobile: null,\r\n        file: null,\r\n        imageSelected: null\r\n    }\r\n\r\n    changeInputHandler = (event, inputIdentifier) => {\r\n        const createMobileForm = {...this.state.createMobileForm};\r\n        const stateElement = {...createMobileForm[inputIdentifier]};\r\n        stateElement.value = event.target.value;\r\n        if (inputIdentifier === 'mobile_Picture' && event.target.files[0]) {\r\n            const file = event.target.files[0];\r\n            this.setState({file: file, imageSelected: URL.createObjectURL(file)});\r\n        }\r\n        stateElement.touched = true;\r\n        stateElement.valid = this.checkValidity(stateElement.value, stateElement.validationRules);\r\n        createMobileForm[inputIdentifier] = stateElement;\r\n\r\n        let formValid = true;\r\n        for (let key in createMobileForm) {\r\n            formValid = createMobileForm[key].valid && formValid\r\n        }\r\n        this.setState({createMobileForm: createMobileForm, formIsValid: formValid});\r\n    }\r\n\r\n    componentDidMount() {\r\n        let params = queryString.parse(this.props.location.search);\r\n        for (let key in params) {\r\n            if (params[key]) {\r\n                const editedMobile = this.props.location.state.filteredMobile;\r\n                const editForm = {...this.state.createMobileForm};\r\n                const title = {...editForm['Title']};\r\n                const description = {...editForm['Description']};\r\n                const price = {...editForm['Price']};\r\n                const model = {...editForm['Model']};\r\n                title.value = editedMobile.title;\r\n                title.valid = true;\r\n                description.value = editedMobile.description;\r\n                description.valid = true;\r\n                price.value = editedMobile.price;\r\n                price.valid = true;\r\n                model.value = editedMobile.model;\r\n                model.valid = true;\r\n                editForm['Title'] = title;\r\n                editForm['Description'] = description;\r\n                editForm['Price'] = price;\r\n                editForm['Model'] = model;\r\n                this.setState({createMobileForm: editForm, mode: 'edit', filteredMobile: editedMobile});\r\n\r\n            } else {\r\n                this.setState({mode: 'create'});\r\n            }\r\n        }\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length < 150 && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    onSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        this.setState({formIsValid: false});\r\n        const formData = new FormData();\r\n        formData.append('pic', this.state.file);\r\n        fetch('http://localhost:8080/post-image', {\r\n            method: 'PUT',\r\n            headers: {\r\n              Authorization: 'Bearer ' + this.props.token\r\n            },\r\n            body: formData\r\n          }).then(res => res.json())\r\n          .then(fileResData => {\r\n              const urlImg = fileResData.filePath;\r\n              const title = this.state.createMobileForm.Title.value;\r\n              const description = this.state.createMobileForm.Description.value;\r\n              const price = +this.state.createMobileForm.Price.value;\r\n              const model = this.state.createMobileForm.Model.value;\r\n              let requestBody;\r\n              if (this.state.mode === 'create') {\r\n                  requestBody = {\r\n                      query: `\r\n                          mutation CreateMobile($title: String!, $description: String!, $price: Float!, $model: String!, $imageUrl: String!) {\r\n                              createMobile(mobileInput: {\r\n                                  title: $title,\r\n                                  description: $description,\r\n                                  price: $price,\r\n                                  model: $model,\r\n                                  imageUrl: $imageUrl\r\n                                }) {\r\n                                  title\r\n                                  description\r\n                                }\r\n                          }\r\n                      `,\r\n                      variables: {\r\n                          title: title,\r\n                          description: description,\r\n                          price: price,\r\n                          model: model,\r\n                          imageUrl: urlImg\r\n                      }\r\n                  };\r\n              } else {\r\n      \r\n                  requestBody = {\r\n                      query: `\r\n                          mutation EditMobile($mobileId: String!, $newMobile: MobileInput!) {\r\n                              editMobile(mobileId: $mobileId, newMobile: $newMobile) {\r\n                                  _id\r\n                                  title\r\n                                  description\r\n                                  price\r\n                                  model\r\n                                  imageUrl\r\n                                  userId {\r\n                                      _id\r\n                                      firstname\r\n                                      lastname\r\n                                      email\r\n                                  }\r\n                                }\r\n                          }\r\n                      `,\r\n                      variables: {\r\n                          mobileId: this.state.filteredMobile._id,\r\n                          newMobile: {\r\n                              title: this.state.createMobileForm.Title.value,\r\n                              description: this.state.createMobileForm.Description.value,\r\n                              price: +this.state.createMobileForm.Price.value,\r\n                              model: this.state.createMobileForm.Model.value,\r\n                              imageUrl: urlImg\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n      \r\n              return axios.post('/graphql', JSON.stringify(requestBody), {headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': 'Bearer ' + this.props.token\r\n              }}).then(resData => {\r\n                      this.props.history.push('/');\r\n                  })\r\n                  .catch(err => {\r\n                      console.log(err);\r\n                  });\r\n          })\r\n    }\r\n\r\n    render() {\r\n        let formElementsArray = [];\r\n        for (let key in this.state.createMobileForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.createMobileForm[key]\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"formParent\">\r\n                <h1>{this.state.mode === 'create' ? 'Create A New Mobile Item' : 'Edit Your Mobile'}</h1>\r\n                <form className=\"login-form\" onSubmit={this.onSubmitForm} encType=\"multipart/form-data\">\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                                <Input key={formElement.id}\r\n                                       elementType={formElement.config.elementType}\r\n                                       elementConfig={formElement.config.elementConfig}\r\n                                       value={formElement.config.value}\r\n                                       label={formElement.id.toUpperCase()}\r\n                                       changed={(event) => this.changeInputHandler(event, formElement.id)}\r\n                                       invalid={!formElement.config.valid}\r\n                                       touched={formElement.config.touched} />\r\n                        )\r\n                    })}\r\n                    {this.state.imageSelected\r\n                     ?\r\n                     <div className=\"image-selected\">\r\n                        <img src={this.state.imageSelected} alt=\"mobileImage\" />\r\n                     </div>\r\n                     :\r\n                     null}\r\n                    <div className=\"submit-button\">\r\n                        <Button type=\"submit\"\r\n                                disabled={!this.state.formIsValid}>\r\n                            {this.state.mode === 'create' ? 'Create New Mobile' : 'Edit Mobile'}        \r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateMobiles);","import React from 'react';\r\nimport './Mobile-detail.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst mobileDetail = props => {\r\n    return (\r\n        <div className=\"mobile-detail\">\r\n            <h1>{props.title}</h1>\r\n            <div className=\"mobile-detail_flex\">\r\n                <div className=\"mobile-detail_flex_image\">\r\n                    <img src={props.image} alt=\"myImage\" />\r\n                </div>\r\n                <div className=\"mobile-detail_flex_info\">\r\n                    <h3>Model: <span>{props.model}</span></h3>\r\n                    <h5>Price: <span>${props.price}</span></h5>\r\n                    <div className=\"mobile-detail_flex_info_desc\">\r\n                        <span>Some Info About This Mobile:</span>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className=\"createAt\">\r\n                        <p>This Mobile Product was created on: <span>{props.date}</span></p>\r\n                        <p>created By: <span>{props.firstname} {props.lastname}</span></p>\r\n                        <p>Mobile Product Creator Contact: <span>{props.useremail}</span></p>\r\n                    </div>\r\n                    <div className=\"mobile-detail_flex_info_buttons\">\r\n                        <Button clicked={props.onGoToMobiles}>Back To Mobile List</Button>\r\n                        {props.userSignedin !== props.mobileUserId\r\n                         ?\r\n                         <Button clicked={props.addToCart.bind(this, props.id, props.title, props.description, props.model, props.price, props.image)}\r\n                         disabled={props.onDisabled}>Add To Cart</Button>\r\n                         :\r\n                         null\r\n                         }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default mobileDetail;","import React, { Component } from 'react';\r\nimport MobileDetail from '../../components/Mobile-detail/Mobile-detail';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\n\r\nclass MobileDetailContainer extends Component {\r\n    state = {\r\n        filteredMobile: null,\r\n        buttonDisabled: false\r\n    }\r\n    componentWillMount() {\r\n        this.setState({filteredMobile: JSON.parse(localStorage.getItem('filteredMobile'))});\r\n    }\r\n\r\n    addToCart = (id, title, description, model, price, imageUrl) => {\r\n        this.setState({buttonDisabled: true});\r\n        const requestBody = {\r\n            query: `\r\n                mutation AddToCart($mobile: AddedMobileToCartInput!) {\r\n                    addToCart(mobile: $mobile) {\r\n                        mobileId {\r\n                        _id\r\n                        title\r\n                        price\r\n                        createdAt\r\n                        updatedAt\r\n                        imageUrl\r\n                        }\r\n                        quantity\r\n                        userId {\r\n                        _id\r\n                        email\r\n                        firstname\r\n                        lastname\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            variables: {\r\n                mobile: {\r\n                    _id: id,\r\n                    title: title,\r\n                    description: description,\r\n                    model: model,\r\n                    price: price,\r\n                    imageUrl: imageUrl\r\n                }\r\n            }\r\n        };\r\n\r\n        axios.post('/graphql', requestBody, {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }})\r\n        .then(res => {\r\n            this.props.history.push('/cart');\r\n        });\r\n    };\r\n\r\n    onGoToMobiles = () => {\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MobileDetail title={this.state.filteredMobile.title}\r\n                              description={this.state.filteredMobile.description}\r\n                              price={this.state.filteredMobile.price}\r\n                              model={this.state.filteredMobile.model}\r\n                              onGoToMobiles={this.onGoToMobiles}\r\n                              date={this.state.filteredMobile.createdAt}\r\n                              firstname={this.state.filteredMobile.userId.firstname}\r\n                              id={this.state.filteredMobile._id}\r\n                              lastname={this.state.filteredMobile.userId.lastname}\r\n                              useremail={this.state.filteredMobile.userId.email}\r\n                              image={this.state.filteredMobile.imageUrl}\r\n                              addToCart={this.addToCart}\r\n                              onDisabled={this.state.buttonDisabled}\r\n                              mobileUserId={this.state.filteredMobile.userId._id}\r\n                              userSignedin={this.props.userId} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MobileDetailContainer);","import React from 'react';\r\nimport './Cart.css';\r\nimport Trash from '../../../images/trash.jpg';\r\n\r\nconst cart = props => {\r\n    return (\r\n        <tr key={props.id}>\r\n            <td>\r\n                <div>\r\n                    <img src={props.imageUrl} alt=\"my phoneimage\" />\r\n                </div>\r\n            </td>\r\n            <td>{props.title}</td>\r\n            <td className=\"table-cart-price\">${props.price}</td>\r\n            <td><span onClick={props.onCartDecrement}>-</span> {props.quantity} <span onClick={props.onCartIncrement}>+</span></td>\r\n            <td>\r\n                <div className=\"trash-image\" onClick={props.removeCart}>\r\n                    <img src={Trash} alt=\"trashImage\" />\r\n                </div>\r\n            </td>\r\n            <td>${props.totalPrice}</td>\r\n        </tr>\r\n    )\r\n};\r\n\r\nexport default cart;","import React from 'react';\r\nimport Cart from './Cart/Cart';\r\nimport './Carts.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst carts = props => {\r\n    const cartList = props.carts.map(cart => {\r\n        return <Cart key={cart._id} \r\n                     id={cart._id}\r\n                     price={cart.mobileId.price}\r\n                     imageUrl={cart.mobileId.imageUrl}\r\n                     quantity={cart.quantity}\r\n                     title={cart.mobileId.title}\r\n                     totalPrice={cart.quantity * cart.mobileId.price}\r\n                     onCartIncrement={props.onIncrementCart.bind(this, cart._id)}\r\n                     onCartDecrement={props.onDecrementCart.bind(this, cart._id)}\r\n                     removeCart={props.onRemoveCart.bind(this, cart._id)} />\r\n    });\r\n    return (\r\n        <>\r\n        <div style={{overflowX: 'auto'}}>\r\n            <table className=\"cart-parent\" border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Products</th>\r\n                        <th>Name Of Product</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Remove</th>\r\n                        <th>Total Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cartList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div className=\"clear_and_order\">\r\n            <button className=\"clear_cart\" onClick={props.clearCart}>Clear Cart</button>\r\n            <div className=\"order_total\">\r\n                <p>Subtotal: <span>${props.subTotalPrice}</span></p>\r\n                <p>Tax: <span>${(props.subTotalPrice * 0.1).toFixed(2)}</span></p>\r\n                <p>Total: <span>${(props.subTotalPrice + (props.subTotalPrice * 0.1)).toFixed(2)}</span></p>\r\n            </div>\r\n            <div className=\"order_stripe\">\r\n                <Button clicked={props.onOrder} disabled={props.onDisabled}>Order Now!</Button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default carts;","import React, { Component } from 'react';\r\nimport Carts from '../../components/Carts/Carts';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass CartContainer extends Component {\r\n    isActive = true;\r\n    state = {\r\n        carts: [],\r\n        noItemsInCart: false,\r\n        quantity: 1,\r\n        totalPrice: 0,\r\n        isLoading: false,\r\n        onDisabled: false,\r\n        showPayment: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchCarts();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.isActive = false;\r\n    }\r\n\r\n    onFetchCarts = () => {\r\n        this.setState({isLoading: true});\r\n        const requestBody = {\r\n            query: `\r\n                query Cart($userId: String) {\r\n                    cart(userId: $userId) {\r\n                        _id\r\n                        mobileId {\r\n                            _id\r\n                            title\r\n                            imageUrl\r\n                            price\r\n                        }\r\n                        userId {\r\n                            _id\r\n                            email\r\n                            firstname\r\n                            lastname\r\n                        }\r\n                        quantity\r\n                  }\r\n                }\r\n            `,\r\n            variables: {\r\n                userId: localStorage.getItem('userId')\r\n            }\r\n        };\r\n        axios.post('/graphql', JSON.stringify(requestBody), {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }}).then(resData => {\r\n            if (this.isActive) {\r\n                resData.data.data.cart.map(car => {\r\n                    this.setState(prevState => {\r\n                        return {\r\n                            totalPrice: prevState.totalPrice += (car.mobileId.price * car.quantity)\r\n                        };\r\n                    });\r\n                });\r\n                if (resData.data.data.cart.length <= 0) {\r\n                    this.setState({noItemsInCart: true, isLoading: false});\r\n                } else {\r\n                    this.setState({carts: resData.data.data.cart, noItemsInCart: false, isLoading: false});\r\n                }\r\n            }\r\n            })\r\n            .catch(err => {\r\n                this.setState({isLoading: false, noItemsInCart: true});\r\n                setTimeout(() => {\r\n                    this.props.history.push('/authenticate');\r\n                }, 4000);\r\n            });\r\n    }\r\n\r\n    onCartIncrement = (id) => {\r\n        this.setState({isLoading: true});\r\n        const requestBody = {\r\n            query: `\r\n                mutation IncrementItemToCart($cartId: String!) {\r\n                    incrementItemToCart(cartId: $cartId) {\r\n                        quantity\r\n                        userId {\r\n                          email\r\n                        }\r\n                        mobileId {\r\n                          title\r\n                          description\r\n                          price\r\n                        }\r\n                      }\r\n                }\r\n            `,\r\n            variables: {\r\n                cartId: id\r\n            }\r\n        };\r\n        \r\n        axios.post('/graphql', JSON.stringify(requestBody), {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }}).then(resData => {\r\n                let existingCart = [...this.state.carts];\r\n                const filteredCartIndex = existingCart.findIndex(p => {\r\n                    return p._id === id;\r\n                });\r\n                existingCart[filteredCartIndex].quantity += 1;\r\n                const newPrice = this.state.totalPrice + resData.data.data.incrementItemToCart.mobileId.price;\r\n                this.setState({carts: existingCart, totalPrice: newPrice, isLoading: false});\r\n            })\r\n            .catch(err => {\r\n                this.setState({isLoading: false});\r\n            });\r\n\r\n    };\r\n\r\n    onCartDecrement = (id) => {\r\n        this.setState({isLoading: true});\r\n        const requestBody = {\r\n            query: `\r\n                mutation DecrementItemToCart($cartId: String!) {\r\n                    decrementItemToCart(cartId: $cartId) {\r\n                        quantity\r\n                        userId {\r\n                          email\r\n                        }\r\n                        mobileId {\r\n                          title\r\n                          description\r\n                          price\r\n                        }\r\n                      }\r\n                }\r\n            `,\r\n            variables: {\r\n                cartId: id\r\n            }\r\n        };\r\n        \r\n        axios.post('/graphql', JSON.stringify(requestBody), {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }}).then(resData => {\r\n                let existingCart = [...this.state.carts];\r\n                const filteredCartIndex = existingCart.findIndex(p => {\r\n                    return p._id === id;\r\n                });\r\n                const filteredCart = existingCart.find(p => {\r\n                    return p._id === id;\r\n                });\r\n                let newPrice;\r\n                if (existingCart[filteredCartIndex].quantity > 1) {\r\n                    existingCart[filteredCartIndex].quantity -= 1;\r\n                    newPrice = this.state.totalPrice - resData.data.data.decrementItemToCart.mobileId.price;\r\n                } else {\r\n                    existingCart.splice(id, 1);\r\n                    newPrice = this.state.totalPrice - filteredCart.mobileId.price;\r\n                    if (existingCart.length <= 0) {\r\n                        this.setState({noItemsInCart: true});\r\n                    }\r\n                }\r\n                this.setState({carts: existingCart, totalPrice: newPrice, isLoading: false});\r\n            })\r\n            .catch(err => {\r\n                this.setState({isLoading: false});\r\n            });\r\n    };\r\n\r\n    onClearCart = () => {\r\n        this.setState({isLoading: true});\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    clearCart {\r\n                    email\r\n                    }\r\n                }  \r\n            `\r\n        };\r\n        axios.post('/graphql', requestBody, {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }})\r\n        .then(resData => {\r\n            this.setState({totalPrice: 0, noItemsInCart: true, isLoading: false});\r\n        });\r\n    };\r\n\r\n    removeCart = (id) => {\r\n        this.setState({isLoading: true});\r\n        const requestBody = {\r\n            query: `\r\n                mutation RemoveCart($cartId: String!) {\r\n                    removeCart(cartId: $cartId) {\r\n                        email\r\n                      }\r\n                }\r\n            `,\r\n            variables: {\r\n                cartId: id\r\n            }\r\n        };\r\n        axios.post('/graphql', requestBody, {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }})\r\n        .then(resData => {\r\n            this.onFetchCarts();\r\n            this.setState({totalPrice: 0, isLoading: false});\r\n        })\r\n        .catch(err => {\r\n            this.setState({isLoading: false});\r\n        });\r\n    };\r\n\r\n    onOrder = () => {\r\n        this.setState({onDisabled: true});\r\n        const requestBody = {\r\n            query: `\r\n            mutation {\r\n                createOrder {\r\n                  order {\r\n                    mobile {\r\n                      price\r\n                    }\r\n                    quantity\r\n                  }\r\n                  userId {\r\n                    email\r\n                  }\r\n                }\r\n              }\r\n            `\r\n        };\r\n\r\n        axios.post('/graphql', requestBody, {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }})\r\n        .then(resData => {\r\n            console.log(resData);\r\n            this.props.history.push('/orders');\r\n        })\r\n        .catch(err => {\r\n        });\r\n\r\n    };\r\n\r\n    backdropClose = () => {\r\n        this.setState({showPayment: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLoading\r\n                 ?\r\n                 <div className=\"spinner-parent\">\r\n                     <Spinner />\r\n                 </div>\r\n                 :\r\n                 this.state.noItemsInCart\r\n                    ?\r\n                    <h1 style={{textAlign: 'center', paddingTop: '40px'}}>No Items In Your Cart</h1>\r\n                    :\r\n                   <>\r\n                   <h1 style={{textAlign: 'center', paddingTop: '30px', paddingBottom: '30px'}}>Your <span style={{color: '#07393C'}}>Cart</span></h1>\r\n                   <Carts carts={this.state.carts}\r\n                          onIncrementCart={this.onCartIncrement}\r\n                          onDecrementCart={this.onCartDecrement}\r\n                          subTotalPrice={this.state.totalPrice}\r\n                          clearCart={this.onClearCart}\r\n                          onRemoveCart={this.removeCart}\r\n                          onOrder={this.onOrder} />\r\n                   </>\r\n                 }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userId,\r\n        token: state.token,\r\n        firstname: state.firstname\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CartContainer);","import React from 'react';\r\nimport './Order.css';\r\n\r\nconst order = props => {\r\n    return (\r\n        <div className=\"order\" key={props.id}>\r\n            <h3>Order: #<span>{props.id}</span></h3>\r\n            {props.orderMobiles.map(order => {\r\n                return (\r\n                    <div className=\"order-detail\" key={order.mobile._id}>\r\n                        <p>{order.mobile.title} (<span>{order.quantity}</span>)</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div>Date of Order: <span>{props.date}</span></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React from 'react';\r\nimport Order from './Order/Order';\r\n\r\nconst orders = props => {\r\n    return props.orders.map(order => {\r\n        return (\r\n            <Order id={order._id} \r\n                   key={order._id}\r\n                   orderMobiles={order.order}\r\n                   date={order.createdAt} />\r\n        )\r\n    });\r\n};\r\n\r\nexport default orders;","import React, { Component } from 'react';\r\nimport './Orders.css';\r\nimport Orders from '../../components/Orders/Orders';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass OrdersContainer extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        isLoading: false,\r\n        noOrders: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onFetchOrders();\r\n    }\r\n\r\n    onFetchOrders = () => {\r\n        this.setState({isLoading: true});\r\n        const requestBody = {\r\n            query: `\r\n                query Orders($userId: String) {\r\n                    orders(userId: $userId) {\r\n                        _id\r\n                        order {\r\n                          mobile {\r\n                            _id\r\n                            price\r\n                            title\r\n                          }\r\n                          quantity\r\n                        }\r\n                        userId {\r\n                          firstname\r\n                        }\r\n                        createdAt\r\n                      }\r\n                }\r\n            `,\r\n            variables: {\r\n                userId: localStorage.getItem('userId')\r\n            }\r\n        };\r\n\r\n        axios.post('/graphql', requestBody, {headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + this.props.token\r\n        }})\r\n        .then(resData => {\r\n            if (resData.data.data.orders.length <= 0) {\r\n                this.setState({noOrders: true, isLoading: false});\r\n            } else {\r\n                this.setState({orders: resData.data.data.orders, isLoading: false, noOrders: false});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState({isLoading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let allOrders;\r\n        if (this.state.isLoading) {\r\n            allOrders = <Spinner />;\r\n        } else {\r\n            if (this.state.noOrders) {\r\n                allOrders = <h1>No Orders Yet!!</h1>\r\n            } else {\r\n                allOrders = <Orders orders={this.state.orders} />\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"orders\">\r\n                <h1>Your <span>Orders</span></h1>\r\n                {allOrders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token,\r\n        userId: state.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrdersContainer);","import React, { Component } from 'react';\r\nimport BackDrop from '../components/UI/Backdrop/Backdrop';\r\n\r\nconst errorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptors = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            })\r\n\r\n            this.resInterceptors = axios.interceptors.response.use(res => {\r\n                return res;\r\n            }, error => {\r\n                this.setState({error: error})\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptors);\r\n            axios.interceptors.response.eject(this.resInterceptors);\r\n        }\r\n\r\n        closeBackdrop = () => {\r\n            this.setState({error: null});\r\n        }\r\n        render() {\r\n            return (\r\n                <>\r\n                    <BackDrop show={this.state.error} close={this.closeBackdrop}>\r\n                        <div className=\"error_message_parent\">\r\n                            <p className=\"error_message\">\r\n                                {this.state.error \r\n                                ?\r\n                                    this.state.error.response\r\n                                    ?\r\n                                    this.state.error.response.data.errors[0].message \r\n                                    :\r\n                                    null\r\n                                : \r\n                                null}\r\n                            </p>\r\n                        </div>\r\n                    </BackDrop>\r\n                    <WrappedComponent {...this.props} />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nexport default errorHandler;","import React, { Component } from 'react';\nimport './App.css';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport Mobiles from './containers/Mobiles/Mobiles';\nimport Auth from './containers/Auth/Auth';\nimport Signin from './containers/Auth/Signin/Signin';\nimport Logout from './containers/Auth/Logout/Logout';\nimport CreateMobiles from './containers/CreateMobiles/CreateMobiles';\nimport * as ActionCreators from './store/Actions/auth';\nimport MobileDetailContainer from './containers/Mobile-Detail/Mobile-Detail';\nimport CartContainer from './containers/Cart/Cart';\nimport OrdersContainer from './containers/Orders/Orders';\nimport {connect} from 'react-redux';\nimport ErrorHandler from './hoc/ErrorHandler';\nimport axios from 'axios';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.checkAuth();\n  }\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          {!this.props.isAuthenticated ? <Route path=\"/authenticate\" exact component={Auth} /> : null}\n          {!this.props.isAuthenticated ? <Route path=\"/signin\" exact component={Signin} /> : null}\n          {this.props.isAuthenticated ? <Route path=\"/logout\" exact component={Logout} /> : null}\n          {this.props.isAuthenticated ? <Route path=\"/new\" exact component={CreateMobiles} /> : null}\n          {this.props.isAuthenticated ? <Route path=\"/cart\" exact component={CartContainer} /> : null}\n          {this.props.isAuthenticated ? <Route path=\"/edit/:id\" exact component={CreateMobiles} /> : null}\n          {this.props.isAuthenticated ? <Route path=\"/orders\" exact component={OrdersContainer} /> : null}\n          {this.props.isAuthenticated ? <Route path=\"/mobile/:id\" exact component={MobileDetailContainer} /> : null}\n          <Route path=\"/\" exact component={Mobiles} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkAuth: () => dispatch(ActionCreators.checkAuthState())\n  }\n}\n\nexport default ErrorHandler(withRouter(connect(mapStateToProps, mapDispatchToProps)(App)), axios);\n","import * as ActionTypes from '../Actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    firstname: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.LOGIN:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                userId: action.userId,\r\n                firstname: action.firstname,\r\n                error: null\r\n            }\r\n        case ActionTypes.LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                firstname: null,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport AuthReducer from './store/Reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst logger = store => {\n    return next => {\n        return action => {\n            const result = next(action);\n            return result;\n        };\n    };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n      const store = createStore(AuthReducer, composeEnhancers(\n        applyMiddleware(logger, thunk)\n      ));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/logo.9f7e506d.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.1a439f85.jpg\";"],"sourceRoot":""}